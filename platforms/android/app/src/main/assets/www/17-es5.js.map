{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-checkbox-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './core-c02a05e9.js';\nimport './config-503c2549.js';\nimport { c as createColorClasses, h as hostContext } from './theme-353a032e.js';\nimport { f as findItemLabel, r as renderHiddenInput } from './helpers-c90aaa66.js';\n\nconst Checkbox = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = () => {\n            this.setFocus();\n            this.checked = !this.checked;\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, indeterminate, disabled, checked, value, color, el } = this;\n        const labelId = inputId + '-lbl';\n        const mode = getIonMode(this);\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        let path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign({}, createColorClasses(color), { [mode]: true, 'in-item': hostContext('ion-item', el), 'checkbox-checked': checked, 'checkbox-disabled': disabled, 'checkbox-indeterminate': indeterminate, 'interactive': true }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \":host{--background-checked:var(--ion-color-primary,#3880ff);--border-color-checked:var(--ion-color-primary,#3880ff);--checkmark-color:var(--ion-color-primary-contrast,#fff);--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:1;opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.23);--background:var(--ion-item-background,var(--ion-background-color,#fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:16px;margin-top:8px;margin-bottom:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:16px;margin-inline-end:16px}}\"; }\n};\nlet checkboxIds = 0;\n\nexport { Checkbox as ion_checkbox };\n"],"sourceRoot":"webpack:///"}