{"version":3,"sources":["node_modules/@ionic/core/dist/esm/tap-click-b300ec79.js"],"names":[],"mappings":"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","sourcesContent":["import { n as now, p as pointerCoord } from './helpers-c90aaa66.js';\n\nconst startTapClick = (config) => {\r\n    let lastTouch = -MOUSE_WAIT * 10;\r\n    let lastActivated = 0;\r\n    let scrollingEl;\r\n    let activatableEle;\r\n    let activeRipple;\r\n    let activeDefer;\r\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\r\n    const clearDefers = new WeakMap();\r\n    const isScrolling = () => {\r\n        return scrollingEl !== undefined && scrollingEl.parentElement !== null;\r\n    };\r\n    // Touch Events\r\n    const onTouchStart = (ev) => {\r\n        lastTouch = now(ev);\r\n        pointerDown(ev);\r\n    };\r\n    const onTouchEnd = (ev) => {\r\n        lastTouch = now(ev);\r\n        pointerUp(ev);\r\n    };\r\n    const onMouseDown = (ev) => {\r\n        const t = now(ev) - MOUSE_WAIT;\r\n        if (lastTouch < t) {\r\n            pointerDown(ev);\r\n        }\r\n    };\r\n    const onMouseUp = (ev) => {\r\n        const t = now(ev) - MOUSE_WAIT;\r\n        if (lastTouch < t) {\r\n            pointerUp(ev);\r\n        }\r\n    };\r\n    const cancelActive = () => {\r\n        clearTimeout(activeDefer);\r\n        activeDefer = undefined;\r\n        if (activatableEle) {\r\n            removeActivated(false);\r\n            activatableEle = undefined;\r\n        }\r\n    };\r\n    const pointerDown = (ev) => {\r\n        if (activatableEle || isScrolling()) {\r\n            return;\r\n        }\r\n        scrollingEl = undefined;\r\n        setActivatedElement(getActivatableTarget(ev), ev);\r\n    };\r\n    const pointerUp = (ev) => {\r\n        setActivatedElement(undefined, ev);\r\n    };\r\n    const setActivatedElement = (el, ev) => {\r\n        // do nothing\r\n        if (el && el === activatableEle) {\r\n            return;\r\n        }\r\n        clearTimeout(activeDefer);\r\n        activeDefer = undefined;\r\n        const { x, y } = pointerCoord(ev);\r\n        // deactivate selected\r\n        if (activatableEle) {\r\n            if (clearDefers.has(activatableEle)) {\r\n                throw new Error('internal error');\r\n            }\r\n            if (!activatableEle.classList.contains(ACTIVATED)) {\r\n                addActivated(activatableEle, x, y);\r\n            }\r\n            removeActivated(true);\r\n        }\r\n        // activate\r\n        if (el) {\r\n            const deferId = clearDefers.get(el);\r\n            if (deferId) {\r\n                clearTimeout(deferId);\r\n                clearDefers.delete(el);\r\n            }\r\n            const delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\r\n            el.classList.remove(ACTIVATED);\r\n            activeDefer = setTimeout(() => {\r\n                addActivated(el, x, y);\r\n                activeDefer = undefined;\r\n            }, delay);\r\n        }\r\n        activatableEle = el;\r\n    };\r\n    const addActivated = (el, x, y) => {\r\n        lastActivated = Date.now();\r\n        el.classList.add(ACTIVATED);\r\n        const rippleEffect = useRippleEffect && getRippleEffect(el);\r\n        if (rippleEffect && rippleEffect.addRipple) {\r\n            removeRipple();\r\n            activeRipple = rippleEffect.addRipple(x, y);\r\n        }\r\n    };\r\n    const removeRipple = () => {\r\n        if (activeRipple !== undefined) {\r\n            activeRipple.then(remove => remove());\r\n            activeRipple = undefined;\r\n        }\r\n    };\r\n    const removeActivated = (smooth) => {\r\n        removeRipple();\r\n        const active = activatableEle;\r\n        if (!active) {\r\n            return;\r\n        }\r\n        const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\r\n        if (smooth && time > 0 && !isInstant(active)) {\r\n            const deferId = setTimeout(() => {\r\n                active.classList.remove(ACTIVATED);\r\n                clearDefers.delete(active);\r\n            }, CLEAR_STATE_DEFERS);\r\n            clearDefers.set(active, deferId);\r\n        }\r\n        else {\r\n            active.classList.remove(ACTIVATED);\r\n        }\r\n    };\r\n    const doc = document;\r\n    doc.addEventListener('ionScrollStart', ev => {\r\n        scrollingEl = ev.target;\r\n        cancelActive();\r\n    });\r\n    doc.addEventListener('ionScrollEnd', () => {\r\n        scrollingEl = undefined;\r\n    });\r\n    doc.addEventListener('ionGestureCaptured', cancelActive);\r\n    doc.addEventListener('touchstart', onTouchStart, true);\r\n    doc.addEventListener('touchcancel', onTouchEnd, true);\r\n    doc.addEventListener('touchend', onTouchEnd, true);\r\n    doc.addEventListener('mousedown', onMouseDown, true);\r\n    doc.addEventListener('mouseup', onMouseUp, true);\r\n};\r\nconst getActivatableTarget = (ev) => {\r\n    if (ev.composedPath) {\r\n        const path = ev.composedPath();\r\n        for (let i = 0; i < path.length - 2; i++) {\r\n            const el = path[i];\r\n            if (el.classList && el.classList.contains('ion-activatable')) {\r\n                return el;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return ev.target.closest('.ion-activatable');\r\n    }\r\n};\r\nconst isInstant = (el) => {\r\n    return el.classList.contains('ion-activatable-instant');\r\n};\r\nconst getRippleEffect = (el) => {\r\n    if (el.shadowRoot) {\r\n        const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\r\n        if (ripple) {\r\n            return ripple;\r\n        }\r\n    }\r\n    return el.querySelector('ion-ripple-effect');\r\n};\r\nconst ACTIVATED = 'activated';\r\nconst ADD_ACTIVATED_DEFERS = 200;\r\nconst CLEAR_STATE_DEFERS = 200;\r\nconst MOUSE_WAIT = 2500;\n\nexport { startTapClick };\n"],"sourceRoot":"webpack:///"}