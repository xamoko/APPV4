{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-spinner.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as getIonMode, h, H as Host } from './core-c02a05e9.js';\nimport { b as config } from './config-503c2549.js';\nimport { c as createColorClasses } from './theme-353a032e.js';\n\nconst spinners = {\r\n    'bubbles': {\r\n        dur: 1000,\r\n        circles: 9,\r\n        fn: (dur, index, total) => {\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            const angle = 2 * Math.PI * index / total;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circles': {\r\n        dur: 1000,\r\n        circles: 8,\r\n        fn: (dur, index, total) => {\r\n            const step = index / total;\r\n            const animationDelay = `${(dur * step) - dur}ms`;\r\n            const angle = 2 * Math.PI * step;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circular': {\r\n        dur: 1400,\r\n        elmDuration: true,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 20,\r\n                cx: 44,\r\n                cy: 44,\r\n                fill: 'none',\r\n                viewBox: '22 22 44 44',\r\n                transform: 'translate(0,0)',\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'crescent': {\r\n        dur: 750,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 26,\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'dots': {\r\n        dur: 750,\r\n        circles: 3,\r\n        fn: (_, index) => {\r\n            const animationDelay = -(110 * index) + 'ms';\r\n            return {\r\n                r: 6,\r\n                style: {\r\n                    'left': `${9 - (9 * index)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 17,\r\n                y2: 29,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines-small': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 12,\r\n                y2: 20,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nconst SPINNERS = spinners;\n\nconst Spinner = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the spinner's animation will be paused.\n         */\n        this.paused = false;\n    }\n    getName() {\n        const spinnerName = this.name || config.get('spinner');\n        const mode = getIonMode(this);\n        if (spinnerName) {\n            return spinnerName;\n        }\n        return (mode === 'ios') ? 'lines' : 'circular';\n    }\n    render() {\n        const self = this;\n        const mode = getIonMode(self);\n        const spinnerName = self.getName();\n        const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\n        const duration = (typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur);\n        const svgs = [];\n        if (spinner.circles !== undefined) {\n            for (let i = 0; i < spinner.circles; i++) {\n                svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n            }\n        }\n        else if (spinner.lines !== undefined) {\n            for (let i = 0; i < spinner.lines; i++) {\n                svgs.push(buildLine(spinner, duration, i, spinner.lines));\n            }\n        }\n        return (h(Host, { class: Object.assign({}, createColorClasses(self.color), { [mode]: true, [`spinner-${spinnerName}`]: true, 'spinner-paused': !!self.paused || config.getBoolean('_testing') }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n    }\n    static get style() { return \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;-webkit-transform-origin:center;transform-origin:center;position:absolute;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}:host-context([dir=rtl]) svg,[dir=rtl] svg{left:unset;right:unset;right:0;-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{-webkit-animation:spinner-scale-out 1s linear infinite;animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{-webkit-animation:spinner-rotate 1s linear infinite;animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{-webkit-animation:spinner-dots 1s linear infinite;animation:spinner-dots 1s linear infinite}:host(.spinner-circular){-webkit-animation:spinner-circular linear infinite;animation:spinner-circular linear infinite}:host(.spinner-circular) circle{-webkit-animation:spinner-circular-inner ease-in-out infinite;animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px,200px;stroke-dashoffset:0px;stroke-width:3.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) circle,:host(.spinner-paused) svg{-webkit-animation-play-state:paused;animation-play-state:paused}\\@-webkit-keyframes spinner-fade-out{0%{opacity:1}to{opacity:0}}\\@keyframes spinner-fade-out{0%{opacity:1}to{opacity:0}}\\@-webkit-keyframes spinner-scale-out{0%{-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:scale(0);transform:scale(0)}}\\@keyframes spinner-scale-out{0%{-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:scale(0);transform:scale(0)}}\\@-webkit-keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\\@keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\\@-webkit-keyframes spinner-dots{0%{-webkit-transform:scale(1);transform:scale(1);opacity:.9}50%{-webkit-transform:scale(.4);transform:scale(.4);opacity:.3}to{-webkit-transform:scale(1);transform:scale(1);opacity:.9}}\\@keyframes spinner-dots{0%{-webkit-transform:scale(1);transform:scale(1);opacity:.9}50%{-webkit-transform:scale(.4);transform:scale(.4);opacity:.3}to{-webkit-transform:scale(1);transform:scale(1);opacity:.9}}\\@-webkit-keyframes spinner-circular{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\\@keyframes spinner-circular{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\\@-webkit-keyframes spinner-circular-inner{0%{stroke-dasharray:1px,200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px,200px;stroke-dashoffset:-15px}to{stroke-dasharray:100px,200px;stroke-dashoffset:-125px}}\\@keyframes spinner-circular-inner{0%{stroke-dasharray:1px,200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px,200px;stroke-dashoffset:-15px}to{stroke-dasharray:100px,200px;stroke-dashoffset:-125px}}\"; }\n};\nconst buildCircle = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\n\nexport { Spinner as ion_spinner };\n"],"sourceRoot":"webpack:///"}