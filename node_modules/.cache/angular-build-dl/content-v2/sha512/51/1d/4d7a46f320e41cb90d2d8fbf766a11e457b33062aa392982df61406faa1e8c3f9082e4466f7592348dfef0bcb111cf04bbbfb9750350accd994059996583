{"version":3,"sources":["node_modules/@angular/fire/storage/es2015/index.js","node_modules/@angular/fire/storage/es2015/observable/fromTask.js","node_modules/@angular/fire/storage/es2015/public_api.js","node_modules/@angular/fire/storage/es2015/ref.js","node_modules/@angular/fire/storage/es2015/storage.js","node_modules/@angular/fire/storage/es2015/storage.module.js","node_modules/@angular/fire/storage/es2015/task.js","node_modules/@firebase/storage/dist/index.esm.js","node_modules/firebase/storage/dist/index.esm.js","src/app/pages/avance-tarea/avance-tarea.page.html","src/app/pages/avance-tarea/avance-tarea.module.ts","src/app/pages/avance-tarea/avance-tarea.page.scss","src/app/pages/avance-tarea/avance-tarea.page.ts"],"names":[],"mappings":";;2TAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,oBAAA,GAAA,CAAA,wCAAA,CAAA,mBAAA,CAAA,mBAAA,2DAAA,CAAA,CAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,wCAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,eAAA,CAAA,UAAA,CAAA,MAAA,CAAA,wCAAA,CAAA,eAAA,CAAA,CAAA,EAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,wCAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,wCAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,wCAAA,CAAA,UAAA,CAAA,CAAA,EAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,0BAAA,CAAA,UAAA,CAAA,MAAA,CAAA,wCAAA,CAAA,0BAAA,CAAA,CAAA,EACA;;;qPCDA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,iCAAA,CAAA,mBAAA,CAAA,WAAA,uCAAA,CAAA,CACO,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CACP,MAAA,IAAe,CAAA,iCAAA,CAAA,YAAA,CAAf,CAAyB,SAAA,UAAA,CAAA,CACzB,GAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,IAAA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,SAAA,CAAA,UAAA,CAAA,QAAA,EAAA,CAAA,CACA,IAAA,CAAA,EAAA,CAAA,eAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,EACA,MAAA,kBAAA,CAAA,IAAA,CAAA,MAAA,EAAA,CACK,CANL,CAOA,CACA;;;qUCVA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,oBAAA,GAAA,CAAA,iCAAA,CAAA,mBAAA,CAAA,YAAA,oDAAA,CAAA,CAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,iCAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,qCAAA,CAAA,mBAAA,CAAA,gBAAA,wDAAA,CAAA,CAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,eAAA,CAAA,UAAA,CAAA,MAAA,CAAA,qCAAA,CAAA,eAAA,CAAA,CAAA,EAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,qCAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,kCAAA,CAAA,mBAAA,CAAA,aAAA,qDAAA,CAAA,CAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,kCAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,iDAAA,CAAA,mBAAA,CAAA,4BAAA,oEAAA,CAAA,CAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,iDAAA,CAAA,UAAA,CAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,4CAAA,CAAA,mBAAA,CAAA,uBAAA,+DAAA,CAAA,CAAA,6BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,0BAAA,CAAA,UAAA,CAAA,MAAA,CAAA,4CAAA,CAAA,0BAAA,CAAA,CAAA,EAKA;;;8NCLA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,kCAAA,CAAA,mBAAA,CAAA,aAAA,qDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,iCAAA,CAAA,mBAAA,CAAA,WAAA,uCAAA,CAAA,CAEO,QAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,CACP,MAAA,CACA,cAAA,CAAA,gCAAA,CAAA,SAAA,CAAA,sBAAA,CAAA,SAAA,CAAA,iBAAA,CAA2F,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAI,SAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,cAAA,EAAA,CAAA,CAAJ,CAA3F,CAAA,CAAA,CADA,CAEA,WAAA,CAAA,6BAAA,CAAA,SAAA,CAAA,sBAAA,CAAA,SAAA,CAAA,iBAAA,CAAwF,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAI,SAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,WAAA,EAAA,CAAA,CAAJ,CAAxF,CAAA,CAAA,CAFA,CAGA,MAAA,CAAA,yBAAsB,CAAA,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAI,GAAA,CAAA,MAAA,EAAJ,CAAtB,CAHA,CAIA,KAAA,CAAA,eAAA,IAAA,QAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,SAAA,CAAA,CAJA,CAKA,eAAA,CAAA,yBAAA,IAAA,QAAmC,CAAA,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAI,GAAA,CAAA,cAAA,CAAA,IAAA,CAAJ,CAAnC,CALA,CAMA,cAAA,CAAA,wBAAA,IAAA,QAAkC,CAAA,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,CAAI,GAAA,CAAA,cAAA,CAAA,IAAA,CAAJ,CAAlC,CANA,CAOA,GAAA,CAAA,aAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,MAAmB,CAAA,MAAA,CAAA,kCAAA,CAAA,kBAAA,CAAA,CAAA,CAAgB,IAAhB,CACV,CAVT,CAWA,SAAA,CAAA,mBAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CACA,MAAmB,CAAA,MAAA,CAAA,kCAAA,CAAA,kBAAA,CAAA,CAAA,CAAgB,IAAhB,CACnB,CAdA,CAgBA,CACA;;;uPCpBA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,eAAA,CAAA,UAAA,CAAA,MAAA,CAAA,aAAA,CAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,0CAAA,CAAA,mBAAA,CAAA,oBAAA,+CAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,iCAAA,CAAA,mBAAA,CAAA,YAAA,oDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,0CAAA,CAAA,mBAAA,CAAA,oBAAA,8CAAA,CAAA,CAAA,GAAA,CAAA,UAAA,CAAkB,SAAI,EAAI,SAAI,CAAA,UAA9B,EAA8B,SAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAC9B,GAAA,CAAA,CAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CACA,GAAA,MAAA,CAAA,OAAA,GAAA,QAAA,EAAA,MAAA,CAAA,OAAA,CAAA,QAAA,GAAA,UAAA,CAAA,CAAA,CAAA,OAAA,CAAA,QAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,IACA,KAAA,GAAA,CAAA,CAAA,CAAA,UAAA,CAAA,MAAA,CAAA,CAAA,CAA4C,CAAA,EAAA,CAA5C,CAAoD,CAAA,EAApD,EAAoD,GAAA,CAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,GAAA,CAApD,CACA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CACA,CALA,CAMA,GAAA,CAAA,UAAA,CAAkB,SAAI,EAAI,SAAI,CAAA,UAA9B,EAA8B,SAAA,CAAA,CAAA,CAAA,CAAA,CAC9B,GAAA,MAAA,CAAA,OAAA,GAAA,QAAA,EAAA,MAAA,CAAA,OAAA,CAAA,QAAA,GAAA,UAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CACA,CAFA,CAGA,GAAA,CAAA,OAAA,CAAe,SAAI,EAAI,SAAI,CAAA,OAA3B,EAA2B,SAAA,UAAA,CAAA,SAAA,CAAA,CAC3B,MAAA,UAAA,MAAA,CAAA,GAAA,CAAA,CAAmC,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,CAAoC,CACvE,CAFA,CAMO,GAAA,CAAA,aAAA,CAAA,GAA0B,CAAA,0CAAA,CAAA,gBAAA,CAA1B,CAAwC,4BAAxC,CAAA,CACP,GAAA,CAAA,kBAAA,yBACA,4BAAA,OAAA,CAAA,YAAA,CAAA,aAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CACA,KAAA,SAAA,CAAA,GAA6B,CAAA,0CAAA,CAAA,uBAAA,CAA7B,CAAkD,IAAlD,CAAkD,UAAlD,CAAA,CACA,KAAA,OAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,UAAA,CACA,GAAA,CAAA,GAAA,CAAwB,MAAA,CAAA,0CAAA,CAAA,qBAAA,CAAA,CAAA,CAAmB,OAAnB,CAAmB,YAAnB,CAAxB,CACA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,EAAA,SAAA,CACS,CAHT,CAIA,CAPA,+CAQA,GARA,CAQA,aAAA,IAAA,CAAA,CACA,MAAe,CAAA,MAAA,CAAA,iCAAA,CAAA,kBAAA,CAAA,CAAA,CAAgB,KAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAhB,CAAgB,KAAA,SAAhB,CACf,CAVA,QAWA,MAXA,CAWA,gBAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,KAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAoB,MAAA,CAAA,iCAAA,CAAA,kBAAA,CAAA,CAAA,CAAgB,UAAhB,CAAgB,KAAA,SAAhB,CAApB,CACA,MAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CACA,CAfA,6BAAA,CAiBA,kBAAA,CAAA,UAAA,CAAA,CACI,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,EADJ,CAEA,OAAA,CAAA,CAAA,CAAe,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,0CAAA,CAAA,sBAAA,CAAP,CAAf,CAFA,CAGA,OAAA,CAAA,CAAA,CAAe,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,EAAf,CAHA,CAGuB,OAAA,CAAA,CAAA,CAAgB,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,0CAAA,CAAA,2BAAA,CAAP,CAAhB,CAHvB,CAIA,OAAA,CAAA,CAAA,CAAe,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,EAAf,CAJA,CAIuB,OAAA,CAAA,CAAA,CAAgB,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAM,aAAN,CAAhB,CAJvB,CAKA,OAAA,CAAA,CAAA,CAAe,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,0CAAA,CAAA,aAAA,CAAP,CAAf,CALA,CAMA,UAAA,CAAA,mBAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CACQ,0CAAA,CAAA,QAAA,CADR,CAAA,CANA,CAAA,CAQA,kBARA,CAAA,CAUA;;;2PC3CA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,0BAAA,CAAA,UAAA,CAAA,MAAA,CAAA,wBAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,0CAAA,CAAA,mBAAA,CAAA,oBAAA,+CAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,qCAAA,CAAA,mBAAA,CAAA,gBAAA,wDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,6CAAA,CAAA,mBAAA,CAAA,uBAAA,mDAAA,CAAA,CAAA,GAAA,CAAA,UAAA,CAAkB,SAAI,EAAI,SAAI,CAAA,UAA9B,EAA8B,SAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAC9B,GAAA,CAAA,CAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CACA,GAAA,MAAA,CAAA,OAAA,GAAA,QAAA,EAAA,MAAA,CAAA,OAAA,CAAA,QAAA,GAAA,UAAA,CAAA,CAAA,CAAA,OAAA,CAAA,QAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,IACA,KAAA,GAAA,CAAA,CAAA,CAAA,UAAA,CAAA,MAAA,CAAA,CAAA,CAA4C,CAAA,EAAA,CAA5C,CAAoD,CAAA,EAApD,EAAoD,GAAA,CAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,GAAA,CAApD,CACA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CACA,CALA,CASA,GAAA,CAAA,wBAAA,sCAAA,CAEA,wBAAA,CAAA,UAAA,CAAA,CACI,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAQ,CACZ,SAAA,CAAA,CAAoB,qCAAA,CAAA,oBAAA,CAApB,CADY,CAAR,CADJ,CAAA,CAIA,wBAJA,CAAA,CAMA;;;gOCjBA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,iDAAA,CAAA,mBAAA,CAAA,4BAAA,oEAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,2CAAA,CAAA,mBAAA,CAAA,qBAAA,iDAAA,CAAA,CAEO,QAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,CACP,GAAA,CAAA,MAAA,CAAmB,MAAA,CAAA,iDAAA,CAAA,UAAA,CAAA,CAAA,CAAQ,IAAR,CAAnB,CACA,MAAA,CACA,IAAA,CAAA,IADA,CAEA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAFA,CAGA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAHA,CAIA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAJA,CAKA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CALA,CAMA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CANA,CAOA,eAAA,CAAA,iCAAA,CAAA,MAAA,CAPA,CAQA,iBAAA,CAAA,mCAAA,CAAA,MAAA,CAAA,IAAA,CAA6C,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAG,SAAA,CAAA,QAAA,CAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,UAAA,CAAA,GAAA,CAAH,CAA7C,CAAA,CARA,CAUA,CACA;;;6NCfA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,iBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,eAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,0CAAA,CAAA,mBAAA,CAAA,oBAAA,gDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,kDAAA,CAAA,aAAA,mBAAA,CAAA,CAAA,CAAA,0CAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,kCAAA,CAAA,mBAAA,CAAA,YAAA,mCAAA,CAAA,CAGA;;;;;;;;;;;;;;;IAgBA;;IAGA;;GAGA,GAAA,CAAA,YAAA,CAAA,gCAAA,CACA;;GAGA,GAAA,CAAA,yBAAA,CAAA,eAAA,CACA;;;;GAKA,GAAA,CAAA,gCAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CACA;;;;GAKA,GAAA,CAAA,6BAAA,CAAA,GAAA,EAAA,CAAA,GAAA,CACA;;;GAIA,GAAA,CAAA,gBAAA,CAAA,CAAA,gBAAA,CAEA;;;;;;;;;;;;;;;GAgBA,GAAA,CAAA,oBAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CACA,KAAA,KAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CACA,KAAA,QAAA,CAAA,qBAAA,OAAA,CACA,KAAA,eAAA,CAAA,IAAA,CACA,KAAA,KAAA,CAAA,eACA,CACA,oBAAA,CAAA,SAAA,CAAA,QAAA,CAAA,UAAA,CACA,MAAA,MAAA,IACA,CAFA,CAGA,oBAAA,CAAA,SAAA,CAAA,UAAA,CAAA,SAAA,IAAA,CAAA,CACA,MAAA,CAAA,WAAA,CAAA,IAAA,CAAA,GAAA,KAAA,QAAA,EACA,CAFA,CAGA,oBAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,UAAA,CACA,MAAA,MAAA,eACA,CAFA,CAGA,oBAAA,CAAA,SAAA,CAAA,qBAAA,CAAA,SAAA,cAAA,CAAA,CACA,KAAA,eAAA,CAAA,cACA,CAFA,CAGA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,KACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,KACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,QACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,gBAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,eACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,oBACC,CAhDD,EAAA,CAiDA,GAAA,CAAA,IAAA,CAAA,CACA;AACA,OAAA,CAAA,SAFA,CAGA,gBAAA,CAAA,kBAHA,CAIA,gBAAA,CAAA,kBAJA,CAKA,iBAAA,CAAA,mBALA,CAMA,cAAA,CAAA,gBANA,CAOA,eAAA,CAAA,iBAPA,CAQA,YAAA,CAAA,cARA,CASA,oBAAA,CAAA,sBATA,CAUA,gBAAA,CAAA,kBAVA,CAWA,QAAA,CAAA,UAXA,CAYA;AACA,kBAAA,CAAA,oBAbA,CAcA,WAAA,CAAA,aAdA,CAeA,sBAAA,CAAA,wBAfA,CAgBA,iBAAA,CAAA,mBAhBA,CAiBA,iBAAA,CAAA,mBAjBA,CAkBA,sBAAA,CAAA,wBAlBA,CAmBA,eAAA,CAAA,iBAnBA,CAoBA,gBAAA,CAAA,kBApBA,CAqBA,sBAAA,CAAA,wBArBA,CAsBA,WAAA,CAAA,aAtBA,CAuBA,sBAAA,CAAA,wBAvBA,CAwBA,cAAA,CAAA,gBAxBA,CAyBA,cAAA,CAAA,gBAzBA,CAAA,CA2BA,QAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CACA,MAAA,WAAA,IACA,CACA,QAAA,CAAA,OAAA,EAAA,CACA,GAAA,CAAA,OAAA,CAAA,iEACA,kBADA,CAEA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CACA,CACA,QAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,WAAA,IAAA,CAAA,mBAAA,CACA,CACA,QAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,cAAA,CAAA,qBACA,MADA,CAEA,mCAFA,CAGA,uCAHA,CAIA,CACA,QAAA,CAAA,eAAA,EAAA,CACA,GAAA,CAAA,OAAA,CAAA,iEACA,+BADA,CAEA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,eAAA,CAAA,OAAA,CACA,CACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,4CAAA,IAAA,CAAA,IAAA,CACA,CACA,QAAA,CAAA,kBAAA,EAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,0DAAA,CACA,CACA,QAAA,CAAA,QAAA,EAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,QAAA,CAAA,oCAAA,CACA,CACA,QAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,WAAA,CAAA,gBAAA,GAAA,CAAA,IAAA,CACA,CACA,QAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,2BAAA,MAAA,CAAA,IAAA,CACA,CACA,QAAA,CAAA,eAAA,EAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,qBACA,0BADA,CAEA,yBAFA,CAGA,uCAHA,CAIA,CACA,QAAA,CAAA,eAAA,EAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,wDAAA,CACA,CACA,QAAA,CAAA,mBAAA,EAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,sEAAA,CACA,CACA,QAAA,CAAA,aAAA,EAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,eAAA,CAAA,iDAAA,CACA,CACA,QAAA,CAAA,eAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,wBAAA,MAAA,CAAA,aAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CACA,CACA,QAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,SAAA,CACA,GAAA,CAAA,MAAA,CACA,GAAA,MAAA,GAAA,MAAA,CAAA,CACA,SAAA,CAAA,MAAA,CACA,MAAA,CAAA,MAAA,GAAA,CAAA,CAAA,UAAA,CAAA,WACA,CAHA,IAIA,CACA,SAAA,CAAA,WAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CACA,MAAA,CAAA,WACA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,8BACA,MADA,CAEA,cAFA,CAGA,SAHA,CAIA,GAJA,CAKA,MALA,CAMA,aANA,CAOA,IAPA,CAQA,GARA,CASA,CACA,QAAA,CAAA,UAAA,EAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,WAAA,CAAA,+BAAA,CACA,CACA;;GAGA,QAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,kBACA,IADA,CAEA,+DAFA,CAGA,oDAHA,CAIA,CACA;;;GAIA,QAAA,CAAA,aAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CACA,MAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,cAAA,CAAA,iCAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CACA,CACA;;GAGA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACA,KAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,cAAA,CAAA,mBAAA,OAAA,CACA,CAEA;;;;;;;;;;;;;;;GAgBA,GAAA,CAAA,YAAA,CAAA,CACA,GAAA,CAAA,KADA,CAEA,MAAA,CAAA,QAFA,CAGA,SAAA,CAAA,WAHA,CAIA,QAAA,CAAA,UAJA,CAAA,CAMA,QAAA,CAAA,eAAA,CAAA,YAAA,CAAA,CACA,OAAA,YAAA,EACA,IAAA,CAAA,YAAA,CAAA,GAAA,CACA,IAAA,CAAA,YAAA,CAAA,MAAA,CACA,IAAA,CAAA,YAAA,CAAA,SAAA,CACA,IAAA,CAAA,YAAA,CAAA,QAAA,CACA,OACA,QACA,KAAA,qCACA,YAAA,CAAA,GADA,CAEA,IAFA,CAGA,YAAA,CAAA,MAHA,CAIA,IAJA,CAKA,YAAA,CAAA,SALA,CAMA,IANA,CAOA,YAAA,CAAA,QAPA,CAQA,IARA,CAPA,CAiBA,CACA;;GAGA,GAAA,CAAA,UAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CACA,KAAA,IAAA,CAAA,IAAA,CACA,KAAA,WAAA,CAAA,WAAA,EAAA,IACA,CACA,MAAA,CAAA,UACC,CAND,EAAA,CAOA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CACA,OAAA,MAAA,EACA,IAAA,CAAA,YAAA,CAAA,GAAA,CACA,MAAA,IAAA,CAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,CAAA,CACA,IAAA,CAAA,YAAA,CAAA,MAAA,CACA,IAAA,CAAA,YAAA,CAAA,SAAA,CACA,MAAA,IAAA,CAAA,UAAA,CAAA,YAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA,CACA,IAAA,CAAA,YAAA,CAAA,QAAA,CACA,MAAA,IAAA,CAAA,UAAA,CAAA,aAAA,CAAA,UAAA,CAAA,CAAA,mBAAA,CAAA,UAAA,CAAA,CAAA,CACA,QACA;AATA,CAWA;AACA,KAAA,CAAA,OAAA,EACA,CACA,QAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CACA,GAAA,CAAA,CAAA,CAAA,EAAA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAmB,CAAA,CAAA,KAAA,CAAA,MAAnB,CAAqC,CAAA,EAArC,CAAqC,CACrbA,IAcA,CACA,GAAA,CAAA,CAAA,CAAA,KAAA,IAAA,KAAA,CAAA,CACA;AACA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CACA,CAHA,IAIA,CACA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CACA,CACA,CACA,CACA,CACA,CACA,MAAA,IAAA,CAAA,UAAA,CAAA,CAAA,CACA,CACA,QAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,CACA,GAAA,CAAA,OAAA,CACA,GAAA,CACA,OAAA,CAAA,kBAAA,CAAA,KAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,QAAA,CAAA,qBAAA,CACA,CACA,MAAA,CAAA,UAAA,CAAA,OAAA,CACA,CACA,QAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CACA,OAAA,MAAA,EACA,IAAA,CAAA,YAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA,CACA,GAAA,QAAA,EAAA,QAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,GAAA,CACA,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,sBACA,WADA,CAEA,mCAFA,CAGA,CACA,KACA,CACA,IAAA,CAAA,YAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA,CACA,GAAA,OAAA,EAAA,QAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CACA,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,sBAAA,WAAA,CAAA,gCAAA,CACA,CACA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,EAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CACA,KACA,CACA,QACA;AAvBA,CAyBA,GAAA,CAAA,KAAA,CACA,GAAA,CACA,KAAA,CAAA,IAAA,CAAA,KAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,yBAAA,CACA,CACA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAmB,CAAA,CAAA,KAAA,CAAA,MAAnB,CAAqC,CAAA,EAArC,CAAqC,CACrC,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,UAAA,CAAA,CAAA,CACA,CACA,MAAA,CAAA,KACA,CACA;;GAGA,GAAA,CAAA,YAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,YAAA,CAAA,OAAA,CAAA,CACA,KAAA,MAAA,CAAA,KAAA,CACA,KAAA,WAAA,CAAA,IAAA,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,CACA,GAAA,OAAA,GAAA,IAAA,CAAA,CACA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,QAAA,CAAA,uDAAA,CACA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CACA,GAAA,MAAA,EAAA,IAAA,CAAA,CACA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CACA,KAAA,WAAA,CAAA,KAAA,MAAA,CACA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAwD,MAAxD,CADA,CAEA,MACA,CACA,KAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,CACA,CACA,MAAA,CAAA,YACC,CAlBD,EAAA,CAmBA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,YAAA,CAAA,OAAA,CAAA,CACA,GAAA,KAAA,CAAA,MAAA,CAAA,CACA,MAAA,CAAA,YAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CACA,CAFA,IAGA,CACA,MAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,IAAA,CACA,CACA,CACA,QAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,YAAA,CAAA,OAAA,CAAA,CACA,MAAA,CAAA,KAAA,CAAA,WACA,CACA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,MAAA,CACA,GAAA,CAAA,UAAA,CAAA,CACA,MAAA,MACA,CACA,MAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,MAAA,IAAA,GACA,CAEA;;;;;;;;;;;;;;;GAgBA,GAAA,CAAA,SAAA,CAAA,CACA,kEACA,aAAA,CAAA,eAFA,CAAA,CAIA,GAAA,CAAA,iBAAA,CAAA,CACA,OAAA,CAAA,SADA,CAEA,OAAA,CAAA,SAFA,CAGA,MAAA,CAAA,QAHA,CAIA,OAAA,CAAA,SAJA,CAKA,SAAA,CAAA,WALA,CAMA,QAAA,CAAA,UANA,CAOA,KAAA,CAAA,OAPA,CAAA,CASA,GAAA,CAAA,SAAA,CAAA,CACA,+CACA,OAAA,CAAA,SAFA,CAGA,uCACA,MAAA,CAAA,QAJA,CAKA,uCACA,OAAA,CAAA,SANA,CAOA,6BACA,QAAA,CAAA,UARA,CASA,qCACA,KAAA,CAAA,OAVA,CAAA,CAYA,QAAA,CAAA,8BAAA,CAAA,KAAA,CAAA,CACA,OAAA,KAAA,EACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA,IAAA,CAAA,iBAAA,CAAA,SAAA,CACA,MAAA,CAAA,SAAA,CAAA,OAAA,CACA,IAAA,CAAA,iBAAA,CAAA,MAAA,CACA,MAAA,CAAA,SAAA,CAAA,MAAA,CACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA,MAAA,CAAA,SAAA,CAAA,OAAA,CACA,IAAA,CAAA,iBAAA,CAAA,QAAA,CACA,MAAA,CAAA,SAAA,CAAA,QAAA,CACA,IAAA,CAAA,iBAAA,CAAA,KAAA,CACA,MAAA,CAAA,SAAA,CAAA,KAAA,CACA,QACA;AACA,MAAA,CAAA,SAAA,CAAA,KAAA,CAfA,CAiBA,CAEA;;;;;;;;;;;;;;;IAgBA;;GAGA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,CAAA,EAAA,IACA,CACA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,CAAA,GAAA,IAAA,EACA,CACA,QAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CACA,MAAA,OAAA,CAAA,CAAA,GAAA,UACA,CACA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CACA,MAAA,OAAA,CAAA,CAAA,GAAA,QACA,CACA,QAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,IACA,CACA,QAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CACA,CACA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CACA,MAAA,OAAA,CAAA,CAAA,GAAA,QAAA,EAAA,CAAA,WAAA,CAAA,MACA,CACA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CACA,CACA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CACA,MAAA,OAAA,CAAA,CAAA,GAAA,QAAA,EAAA,CAAA,WAAA,CAAA,MACA,CACA,QAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,mBAAA,IAAA,CAAA,WAAA,CAAA,IACA,CACA,QAAA,CAAA,mBAAA,EAAA,CACA,MAAA,OAAA,CAAA,IAAA,GAAA,WACA,CAEA;;;;;;;;;;;;;;;IAgBA;;GAGA,GAAA,CAAA,SAAA,CACA,CAAA,SAAA,SAAA,CAAA,CACA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CACA,SAAA,CAAA,SAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAA,CACA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OACC,CAJD,EAIC,SAAA,GAAA,SAAA,CAAA,EAAA,CAJD,EAMA;;;;;;;;;;;;;;;IAgBA;;;GAIA,GAAA,CAAA,YAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,YAAA,EAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,KAAA,KAAA,CAAA,KAAA,CACA,KAAA,IAAA,CAAA,GAAA,CAAA,cAAA,CACA,KAAA,UAAA,CAAA,SAAA,CAAA,QAAA,CACA,KAAA,YAAA,CAAA,GAAA,CAAA,OAAA,CAAA,SAAA,OAAA,CAAA,CACA,KAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,UAAA,CACA,KAAA,CAAA,UAAA,CAAA,SAAA,CAAA,KAAA,CACA,OAAA,CAAA,KAAA,CACa,CAHb,EAIA,KAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,UAAA,CACA,KAAA,CAAA,UAAA,CAAA,SAAA,CAAA,aAAA,CACA,OAAA,CAAA,KAAA,CACa,CAHb,EAIA,KAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,UAAA,CACA,OAAA,CAAA,KAAA,CACa,CAFb,CAGS,CAZT,CAaA,CACA;;OAGA,YAAA,CAAA,SAAA,CAAA,IAAA,CAAA,SAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CACA,GAAA,KAAA,KAAA,CAAA,CACA,KAAA,CAAA,aAAA,CAAA,+BAAA,CACA,CACA,KAAA,KAAA,CAAA,IAAA,CACA,KAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,EACA,GAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CACA,IAAA,GAAA,CAAA,GAAA,GAAA,CAAA,OAAA,CAAA,CACA,GAAA,OAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,CACA,KAAA,IAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,QAAA,EAAA,CACA,CACA,CACA,CACA,GAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CACA,KAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CACA,CAFA,IAGA,CACA,KAAA,IAAA,CAAA,IAAA,EACA,CACA,MAAA,MAAA,YACA,CApBA,CAqBA;;OAGA,YAAA,CAAA,SAAA,CAAA,YAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,KAAA,CAAA,CACA,KAAA,CAAA,aAAA,CAAA,uCAAA,CACA,CACA,MAAA,MAAA,UACA,CALA,CAMA;;OAGA,YAAA,CAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,KAAA,CAAA,CACA,KAAA,CAAA,aAAA,CAAA,oCAAA,CACA,CACA,GAAA,CACA,MAAA,MAAA,IAAA,CAAA,MACA,CACA,MAAA,CAAA,CAAA,CACA,MAAA,CAAA,CACA,CACA,CAVA,CAWA;;OAGA,YAAA,CAAA,SAAA,CAAA,eAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,KAAA,CAAA,CACA,KAAA,CAAA,aAAA,CAAA,0CAAA,CACA,CACA,MAAA,MAAA,IAAA,CAAA,YACA,CALA,CAMA;;;OAIA,YAAA,CAAA,SAAA,CAAA,KAAA,CAAA,UAAA,CACA,KAAA,IAAA,CAAA,KAAA,EACA,CAFA,CAGA;;OAGA,YAAA,CAAA,SAAA,CAAA,iBAAA,CAAA,SAAA,MAAA,CAAA,CACA,MAAA,MAAA,IAAA,CAAA,iBAAA,CAAA,MAAA,CACA,CAFA,CAGA;;OAGA,YAAA,CAAA,SAAA,CAAA,yBAAA,CAAA,SAAA,QAAA,CAAA,CACA,GAAA,KAAA,CAAA,KAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CACA,KAAA,IAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,QAAA,CACA,CACA,CAJA,CAKA;;OAGA,YAAA,CAAA,SAAA,CAAA,4BAAA,CAAA,SAAA,QAAA,CAAA,CACA,GAAA,KAAA,CAAA,KAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CACA,KAAA,IAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,UAAA,CAAA,QAAA,CACA,CACA,CAJA,CAKA,MAAA,CAAA,YACC,CA1GD,EAAA,CA4GA;;;;;;;;;;;;;;;IAgBA;;GAGA,GAAA,CAAA,SAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,SAAA,EAAA,CACA,CACA,SAAA,CAAA,SAAA,CAAA,WAAA,CAAA,UAAA,CACA,MAAA,IAAA,CAAA,YACA,CAFA,CAGA,MAAA,CAAA,SACC,CAPD,EAAA,CASA;;;;;;;;;;;;;;;GAgBA,QAAA,CAAA,cAAA,EAAA,CACA,GAAA,MAAA,CAAA,WAAA,GAAA,WAAA,CAAA,CACA,MAAA,CAAA,WACA,CAFA,IAGA,IAAA,MAAA,CAAA,iBAAA,GAAA,WAAA,CAAA,CACA,MAAA,CAAA,iBACA,CAFA,IAGA,CACA,MAAA,CAAA,SACA,CACA,CACA;;;;;GAMA,QAAA,CAAA,OAAA,EAAA,CACA,GAAA,CAAA,IAAA,CAAA,EAAA,CACA,IAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAoB,EAAA,CAAA,SAAA,CAAA,MAApB,CAA2C,EAAA,EAA3C,CAA2C,CAC3C,IAAA,CAAA,EAAA,CAAA,CAAA,SAAA,CAAA,EAAA,CACA,CACA,GAAA,CAAA,WAAA,CAAA,cAAA,EAAA,CACA,GAAA,WAAA,GAAA,SAAA,CAAA,CACA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,WAAA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAuB,CAAA,CAAA,IAAA,CAAA,MAAvB,CAAwC,CAAA,EAAxC,CAAwC,CACxC,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CACA,CACA,MAAA,CAAA,EAAA,CAAA,OAAA,EACA,CANA,IAOA,CACA,GAAA,mBAAA,EAAA,CAAA,CACA,MAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CACA,CAFA,IAGA,CACA,KAAA,CAAA,KAAA,CAAA,qDAAA,CACA,CACA,CACA,CACA;;;;;;;;GASA,QAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CACA,GAAA,IAAA,CAAA,WAAA,CAAA,CACA,MAAA,CAAA,IAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,CACA,CAFA,IAGA,IAAA,IAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CACA,CAFA,IAGA,IAAA,IAAA,CAAA,KAAA,CAAA,CACA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CACA,CACA,MAAA,KACA,CAEA;;;;;;;;;;;;;;;IAgBA;;;;GAKA,GAAA,CAAA,OAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,OAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,EAAA,CACA,GAAA,YAAA,CAAA,IAAA,CAAA,CAAA,CACA,KAAA,KAAA,CAAA,IAAA,CACA,IAAA,CAAA,IAAA,CAAA,IAAA,CACA,QAAA,CAAA,IAAA,CAAA,IACA,CAJA,IAKA,IAAA,IAAA,WAAA,CAAA,WAAA,CAAA,CACA,GAAA,SAAA,CAAA,CACA,KAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,IAAA,CACA,CAFA,IAGA,CACA,KAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CACA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CACA,CACA,IAAA,CAAA,KAAA,KAAA,CAAA,MACA,CATA,IAUA,IAAA,IAAA,WAAA,CAAA,UAAA,CAAA,CACA,GAAA,SAAA,CAAA,CACA,KAAA,KAAA,CAAA,IACA,CAFA,IAGA,CACA,KAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CACA,KAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CACA,CACA,IAAA,CAAA,IAAA,CAAA,MACA,CACA,KAAA,KAAA,CAAA,IAAA,CACA,KAAA,KAAA,CAAA,QACA,CACA,OAAA,CAAA,SAAA,CAAA,IAAA,CAAA,UAAA,CACA,MAAA,MAAA,KACA,CAFA,CAGA,OAAA,CAAA,SAAA,CAAA,IAAA,CAAA,UAAA,CACA,MAAA,MAAA,KACA,CAFA,CAGA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,SAAA,CAAA,OAAA,CAAA,CACA,GAAA,YAAA,CAAA,KAAA,KAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,KAAA,KAAA,CACA,GAAA,CAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CACA,GAAA,MAAA,GAAA,IAAA,CAAA,CACA,MAAA,KACA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CACA,CAPA,IAQA,CACA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,KAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA,CACA,CACA,CAbA,CAcA,OAAA,CAAA,OAAA,CAAA,UAAA,CACA,GAAA,CAAA,IAAA,CAAA,EAAA,CACA,IAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAwB,EAAA,CAAA,SAAA,CAAA,MAAxB,CAA+C,EAAA,EAA/C,CAA+C,CAC/C,IAAA,CAAA,EAAA,CAAA,CAAA,SAAA,CAAA,EAAA,CACA,CACA,GAAA,mBAAA,EAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA,GAAA,CAAA,CACA,GAAA,GAAA,WAAA,CAAA,OAAA,CAAA,CACA,MAAA,CAAA,GAAA,CAAA,KACA,CAFA,IAGA,CACA,MAAA,CAAA,GACA,CACa,CAPb,CAAA,CAQA,MAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CACA,CAVA,IAWA,CACA,GAAA,CAAA,WAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA,GAAA,CAAA,CACA,GAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CACA,MAAA,CAAA,cAAA,CAAA,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,IACA,CAFA,IAGA,CACA;AACA,MAAA,CAAA,GAAA,CAAA,KACA,CACa,CARb,CAAA,CASA,GAAA,CAAA,aAAA,CAAA,CAAA,CACA,WAAA,CAAA,OAAA,CAAA,SAAA,KAAA,CAAA,CACA,aAAA,EAAA,KAAA,CAAA,UACa,CAFb,EAGA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,CAAA,aAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,CAAA,CACA,WAAA,CAAA,OAAA,CAAA,SAAA,KAAA,CAAA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAA+B,CAAA,CAAA,KAAA,CAAA,MAA/B,CAAiD,CAAA,EAAjD,CAAiD,CACjD,QAAA,CAAA,OAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CACA,CACa,CAJb,EAKA,MAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CAAA,IAAA,CACA,CACA,CAvCA,CAwCA,OAAA,CAAA,SAAA,CAAA,UAAA,CAAA,UAAA,CACA,MAAA,MAAA,KACA,CAFA,CAGA,MAAA,CAAA,OACC,CAhGD,EAAA,CAkGA;;;;;;;;;;;;;;;IAgBA;;GAGA,GAAA,CAAA,QAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,KAAA,MAAA,CAAA,MAAA,CACA,KAAA,KAAA,CAAA,IACA,CACA,MAAA,CAAA,cAAA,CAAA,QAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,KACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,cAAA,CAAA,QAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,IAAA,CAAA,MAAA,GAAA,CACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,QAAA,CAAA,SAAA,CAAA,aAAA,CAAA,UAAA,CACA,GAAA,CAAA,MAAA,CAAA,kBAAA,CACA,MAAA,MAAA,MAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CACA,CAHA,CAIA,QAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,UAAA,CACA,GAAA,CAAA,MAAA,CAAA,kBAAA,CACA,MAAA,MAAA,MAAA,CAAA,KAAA,MAAA,CAAA,CAAA,IACA,CAHA,CAIA,QAAA,CAAA,kBAAA,CAAA,SAAA,YAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,GAAA,CACA,cAAA,CAAA,QAAA,CAAA,WAAA,CAAA,YAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA;AACA;AACA,MAAA,IAAA,CAAA,QAAA,CAAA,YAAA,CAAA,EAAA,CACA,CACA,GAAA,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,CACA,MAAA,CAAA,cACA,CAFA,IAGA,CACA,KAAA,CAAA,oBAAA,CAAA,YAAA,CACA,CACA,CAhBA,CAiBA,QAAA,CAAA,WAAA,CAAA,SAAA,GAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,IAAA,CACA,GAAA,CAAA,YAAA,CAAA,qBAAA,CACA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CACA,GAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACA,CACA,CACA,GAAA,CAAA,MAAA,CAAA,WAAA,CACA,GAAA,CAAA,IAAA,CAAA,iBAAA,CACA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,SAAA,YAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,CAAyB,MAAA,CAAA,CAAzB,CAAyB,IAAA,CAAA,CAAzB,CAAA,CACA,QAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,IAAA,CACA,CACA,GAAA,CAAA,OAAA,CAAA,gBAAA,CACA,GAAA,CAAA,SAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,MAAA,CAAA,aAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,CAA2B,MAAA,CAAA,CAA3B,CAA2B,IAAA,CAAA,CAA3B,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,CACA,CAAa,KAAA,CAAA,OAAb,CAAa,OAAA,CAAA,SAAb,CAAa,UAAA,CAAA,QAAb,CADA,CAEA,CAAa,KAAA,CAAA,SAAb,CAAa,OAAA,CAAA,WAAb,CAAa,UAAA,CAAA,UAAb,CAFA,CAAA,CAIA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAuB,CAAA,CAAA,MAAA,CAAA,MAAvB,CAA0C,CAAA,EAA1C,CAA0C,CAC1C,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CACA,GAAA,QAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,CACA,SAAA,CAAA,EACA,CACA,QAAA,CAAA,GAAA,CAAA,QAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CACA,KAAA,CAAA,UAAA,CAAA,QAAA,EACA,KACA,CACA,CACA,GAAA,QAAA,EAAA,IAAA,CAAA,CACA,KAAA,CAAA,UAAA,CAAA,GAAA,CACA,CACA,MAAA,CAAA,QACA,CAzCA,CA0CA,MAAA,CAAA,QACC,CAvFD,EAAA,CAyFA;;;;;;;;;;;;;;;IAgBA;;;GAIA,QAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,GAAA,CACA,GAAA,CACA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,MAAA,KACA,CACA,GAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,CACA,MAAA,CAAA,GACA,CAFA,IAGA,CACA,MAAA,KACA,CACA,CAEA;;;;;;;;;;;;;;;IAgBA;;IAGA;;GAGA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CACA,MAAA,KACA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CACA,GAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CACA,MAAA,EACA,CACA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CACA,MAAA,CAAA,OACA,CACA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,kBAAA,CAAA,SAAA,CACA,KADA,CACA,GADA,EAEA,MAFA,CAEA,SAAA,SAAA,CAAA,CAAsC,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAA+B,CAFrE,EAGA,IAHA,CAGA,GAHA,CAAA,CAIA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CACA,MAAA,CAAA,kBACA,CAFA,IAGA,CACA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,kBACA,CACA,CACA;;;;;GAMA,QAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CACA,GAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,IACA,CAFA,IAGA,CACA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CACA,CACA,CAEA;;;;;;;;;;;;;;;GAgBA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,MAAA,WAAA,YAAA,CAAA,KAAA,CAAA,OACA,CACA,QAAA,CAAA,eAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,kBAAA,CACA,GAAA,CAAA,SAAA,CAAA,GAAA,CACA,IAAA,GAAA,CAAA,GAAA,GAAA,CAAA,MAAA,CAAA,CACA,GAAA,MAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,CACA;AACA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CACA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GACA,CACA,CACA;AACA,SAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,SACA,CAEA;;;;;;;;;;;;;;;GAgBA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CACA,MAAA,CAAA,KACA,CACA;;GAGA,GAAA,CAAA,OAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CACA,KAAA,MAAA,CAAA,MAAA,CACA,KAAA,KAAA,CAAA,KAAA,EAAA,MAAA,CACA,KAAA,QAAA,CAAA,CAAA,CAAA,QAAA,CACA,KAAA,KAAA,CAAA,KAAA,EAAA,QACA,CACA,MAAA,CAAA,OACC,CARD,EAAA,CASA,GAAA,CAAA,SAAA,CAAA,IAAA,CACA,QAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,QAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,QACA,CAFA,IAGA,CACA,MAAA,CAAA,aAAA,CAAA,QAAA,CACA,CACA,CACA,QAAA,CAAA,WAAA,EAAA,CACA,GAAA,SAAA,CAAA,CACA,MAAA,CAAA,SACA,CACA,GAAA,CAAA,QAAA,CAAA,EAAA,CACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,YAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA,EACA,QAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,SAAA,CAAA,QAAA,CACA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CACA,WAAA,CAAA,KAAA,CAAA,iBAAA,CACA,QAAA,CAAA,IAAA,CAAA,WAAA,EACA;;OAGA,QAAA,CAAA,SAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CACA,GAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CACA,MAAA,CAAA,MAAA,CAAA,IAAA,CACA,CAFA,IAGA,CACA,MAAA,CAAA,IACA,CACA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CACA,WAAA,CAAA,KAAA,CAAA,SAAA,CACA,QAAA,CAAA,IAAA,CAAA,WAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EACA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,UAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,EACA,SAAA,CAAA,QAAA,CACA,MAAA,CAAA,SACA,CACA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,WAAA,CAAA,CACA,QAAA,CAAA,WAAA,EAAA,CACA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,MAAA,CAAA,WAAA,CAAA,oBAAA,CAAA,GAAA,CACA,CACA,MAAA,CAAA,cAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAA4C,GAAA,CAAA,WAA5C,CAAA,CACA,CACA,QAAA,CAAA,YAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,EAAA,CACA,QAAA,CAAA,MAAA,CAAA,CAAA,MAAA,CACA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAmB,CAAA,CAAA,GAAnB,CAA4B,CAAA,EAA5B,CAA4B,CAC5B,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CACA,QAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CACA,CACA,MAAA,CAAA,QAAA,CAAA,WAAA,CAAA,CACA,MAAA,CAAA,QACA,CACA,QAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,cAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,cAAA,CAAA,CACA,GAAA,GAAA,GAAA,IAAA,CAAA,CACA,MAAA,KACA,CACA,GAAA,CAAA,QAAA,CAAA,GAAA,CACA,MAAA,CAAA,YAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CACA,CACA,QAAA,CAAA,6BAAA,CAAA,QAAA,CAAA,cAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,cAAA,CAAA,CACA,GAAA,GAAA,GAAA,IAAA,CAAA,CACA,MAAA,KACA,CACA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CACA;AACA;AACA,MAAA,KACA,CACA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,CACA,GAAA,MAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CACA,MAAA,KACA,CACA,GAAA,CAAA,MAAA,CAAA,kBAAA,CACA,GAAA,CAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,SAAA,KAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,MAAA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,eAAA,CAAA,CACA,GAAA,CAAA,OADA,CAEA,KAAA,CAAA,KAFA,CAAA,CAAA,CAIA,MAAA,CAAA,IAAA,CAAA,WACK,CAVL,CAAA,CAWA,MAAA,CAAA,IAAA,CAAA,CAAA,CACA,CACA,QAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,EAAA,CACA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAmB,CAAA,CAAA,GAAnB,CAA4B,CAAA,EAA5B,CAA4B,CAC5B,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CACA,GAAA,OAAA,CAAA,QAAA,CAAA,CACA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,QAAA,CAAA,OAAA,CAAA,KAAA,CACA,CACA,CACA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CACA,CACA,QAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACA,KAAA,2BACA,CACA,IAAA,GAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CACA,GAAA,GAAA,GAAA,gBAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CACA,KAAA,+CACA,CACA,CAJA,IAKA,CACA,GAAA,eAAA,CAAA,GAAA,CAAA,CAAA,CACA,KAAA,gBAAA,GAAA,CAAA,wBACA,CACA,CACA,CACA,CACA,CAEA;;;;;;;;;;;;;;;GAgBA,GAAA,CAAA,eAAA,CAAA,YAAA,CACA,GAAA,CAAA,eAAA,CAAA,IAAA,CACA,GAAA,CAAA,cAAA,CAAA,WAAA,CACA,GAAA,CAAA,YAAA,CAAA,UAAA,CACA,GAAA,CAAA,SAAA,CAAA,OAAA,CACA,QAAA,CAAA,mBAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,CACA,QAAA,CAAA,EADA,CAEA,KAAA,CAAA,EAFA,CAGA,aAAA,CAAA,QAAA,CAAA,eAAA,CAHA,CAAA,CAKA,GAAA,CAAA,MAAA,CAAA,WAAA,CAAA,MAAA,EAAA,CACA,GAAA,MAAA,GAAA,IAAA,CAAA,CACA,KAAA,CAAA,eAAA,EACA,CACA,GAAA,QAAA,CAAA,YAAA,CAAA,CAAA,CACA,IAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,QAAA,CAAA,YAAA,CAAA,CAAqD,EAAA,CAAA,EAAA,CAAA,MAArD,CAAqE,EAAA,EAArE,CAAqE,CACrE,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CACA,GAAA,CAAA,wBAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,WAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAA,wBAAA,CAAA,CAAA,CACA,UAAA,CAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CACA,CACA,CACA,GAAA,QAAA,CAAA,SAAA,CAAA,CAAA,CACA,IAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,CAAkD,EAAA,CAAA,EAAA,CAAA,MAAlD,CAAkE,EAAA,EAAlE,CAAkE,CAClE,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,WAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CACA,UAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CACA,CACA,CACA,MAAA,CAAA,UACA,CACA,QAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,cAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,cAAA,CAAA,CACA,GAAA,GAAA,GAAA,IAAA,CAAA,CACA,MAAA,KACA,CACA,GAAA,CAAA,QAAA,CAAA,GAAA,CACA,MAAA,CAAA,mBAAA,CAAA,WAAA,CAAA,QAAA,CACA,CACA,QAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACA,KAAA,8BACA,CACA,IAAA,GAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CACA,GAAA,GAAA,GAAA,eAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,EACA,CAAA,CAAA,eAAA,CAAA,EAAA,CADA,CACA,CACA,KAAA,8CACA,CACA,GAAA,CAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,CACA,KAAA,mDAAA,eAAA,CAAA,GACA,CACA,CARA,IASA,IAAA,GAAA,GAAA,cAAA,CAAA,CACA,GAAA,CAAA,CAAA,cAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,CACA,KAAA,kCACA,CACA,CAJA,IAKA,CACA,KAAA,mBAAA,GACA,CACA,CACA,CAEA,GAAA,CAAA,WAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CACA;;;;;;OAOA,OARA,CAQA,OARA,CAQA,CACA,KAAA,GAAA,CAAA,GAAA,CACA,KAAA,MAAA,CAAA,MAAA,CACA,KAAA,OAAA,CAAA,OAAA,CACA,KAAA,OAAA,CAAA,OAAA,CACA,KAAA,SAAA,CAAA,EAAA,CACA,KAAA,OAAA,CAAA,EAAA,CACA,KAAA,IAAA,CAAA,IAAA,CACA,KAAA,YAAA,CAAA,IAAA,CACA;;;WAIA,KAAA,gBAAA,CAAA,IAAA,CACA,KAAA,YAAA,CAAA,CAAA,GAAA,CAAA,CACA,KAAA,oBAAA,CAAA,EACA,CACA,MAAA,CAAA,WACC,CA3BD,EAAA,CA6BA;;;;;;;;;;;;;;;IAgBA;;GAGA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,CACA,KAAA,CAAA,OAAA,EACA,CACA,CACA,QAAA,CAAA,eAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CACA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,YAAA,CAAA,QAAA,GAAA,IAAA,CAAA,CACA,MAAA,CAAA,QACA,CACA,MAAA,CAAA,OACA,CACA,QAAA,CAAA,WAAA,CAAA,WAAA,CAAA,CACA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CACA,YAAA,CAAA,UAAA,GAAA,IAAA,CAAA,CACA,MAAA,CAAA,UACA,CACA,MAAA,CAAA,OACA,CACA,QAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CACA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,YAAA,CAAA,QAAA,GAAA,IAAA,CAAA,CACA,MAAA,CAAA,6BAAA,CAAA,QAAA,CAAA,IAAA,CACA,CACA,MAAA,CAAA,OACA,CACA,QAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,QAAA,CAAA,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,MAAA,CACA,GAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,CACA,MAAA,CAAA,eAAA,EACA,CAFA,IAGA,CACA,GAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,CACA,MAAA,CAAA,aAAA,CAAA,QAAA,CAAA,MAAA,CACA,CAFA,IAGA,CACA,GAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,CACA,MAAA,CAAA,YAAA,CAAA,QAAA,CAAA,IAAA,CACA,CAFA,IAGA,CACA,MAAA,CAAA,GACA,CACA,CACA,CACA,MAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,EACA,MAAA,CAAA,MACA,CACA,MAAA,CAAA,YACA,CACA,QAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,QAAA,CAAA,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CACA,GAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,CACA,MAAA,CAAA,cAAA,CAAA,QAAA,CAAA,IAAA,CACA,CACA,MAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,EACA,MAAA,CAAA,MACA,CACA,MAAA,CAAA,YACA,CACA,QAAA,CAAA,WAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,KAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,qBAAA,EAAA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,eAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CACA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,QAAA,CAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,EAAA,CACA,GAAA,QAAA,CAAA,MAAA,CAAA,CACA,SAAA,CAAA,QAAA,CAAA,CAAA,EACA,CAFA,IAGA,CACA,SAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GACA,CACA,GAAA,SAAA,EAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CACA,SAAA,CAAA,WAAA,CAAA,CAAA,SACA,CACA,GAAA,SAAA,CAAA,CACA,SAAA,CAAA,WAAA,CAAA,CAAA,SACA,CACA,GAAA,UAAA,CAAA,CACA,SAAA,CAAA,YAAA,CAAA,CAAA,UACA,CACA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,KAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,qBAAA,EAAA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,WAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,SAAA,CAAA,SAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CACA,QAAA,CAAA,cAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,KAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,qBAAA,EAAA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CACA,QAAA,CAAA,cAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,CACA,GAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,CAAmB,eAAA,iCAAnB,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,qBAAA,EAAA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,eAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,OAAA,CAAA,OAAA,CACA,WAAA,CAAA,IAAA,CAAA,IAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CACA,QAAA,CAAA,YAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,aAAA,EAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,QAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,qBAAA,EAAA,CACA,QAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAmC,CACnC,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,YAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CACA,QAAA,CAAA,qBAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CACA,MAAA,CAAA,QAAA,EAAA,QAAA,CAAA,aAAA,CAAA,EACA,IAAA,EAAA,IAAA,CAAA,IAAA,EADA,EAEA,0BACA,CACA,QAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAwC,QAAxC,CAAA,CACA,aAAA,CAAA,UAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CACA,aAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CACA,GAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CACA,aAAA,CAAA,aAAA,CAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,IAAA,CACA,CACA,MAAA,CAAA,aACA,CACA,QAAA,CAAA,eAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,CACA,GAAA,CAAA,OAAA,CAAA,CACA,yBAAA,WADA,CAAA,CAGA,QAAA,CAAA,WAAA,EAAA,CACA,GAAA,CAAA,GAAA,CAAA,EAAA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAuB,CAAA,CAAA,CAAvB,CAA8B,CAAA,EAA9B,CAA8B,CAC9B,GAAA,CACA,GAAA,CACA,IAAA,CAAA,MAAA,GACA,QADA,GAEA,KAFA,CAEA,CAFA,CAGA,CACA,MAAA,CAAA,GACA,CACA,GAAA,CAAA,QAAA,CAAA,WAAA,EAAA,CACA,OAAA,CAAA,cAAA,CAAA,CAAA,+BAAiD,QAAjD,CACA,GAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,KACA,QADA,CAEA,MAFA,CAGA,uDAHA,CAIA,cAJA,CAKA,QALA,CAMA,QANA,CAOA,MAPA,CAQA,gBARA,CASA,SAAA,CAAA,aAAA,CATA,CAUA,UAVA,CAWA,GAAA,CAAA,YAAA,CAAA,SAAA,QAAA,CAAA,IAAA,CACA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CACA,GAAA,IAAA,GAAA,IAAA,CAAA,CACA,KAAA,CAAA,eAAA,EACA,CACA,GAAA,CAAA,SAAA,CAAA,CAAqB,IAAA,CAAA,SAAA,CAAA,UAAA,CAArB,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,MAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,kBAAA,EAAA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,eAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,SAAA,CAAA,SAAA,CACA,WAAA,CAAA,OAAA,CAAA,OAAA,CACA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,EAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CACA;;;;;;;GAQA,GAAA,CAAA,qBAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,qBAAA,CAAA,OAAA,CAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,KAAA,OAAA,CAAA,OAAA,CACA,KAAA,KAAA,CAAA,KAAA,CACA,KAAA,SAAA,CAAA,CAAA,CAAA,SAAA,CACA,KAAA,QAAA,CAAA,QAAA,EAAA,IACA,CACA,MAAA,CAAA,qBACC,CARD,EAAA,CASA,QAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,IAAA,CACA,GAAA,CACA,MAAA,CAAA,GAAA,CAAA,iBAAA,CAAA,sBAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,YAAA,CAAA,KAAA,CACA,CACA,GAAA,CAAA,aAAA,CAAA,OAAA,EAAA,CAAA,QAAA,CAAA,CACA,YAAA,CAAA,CAAA,CAAA,MAAA,EAAA,aAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,MACA,CACA,QAAA,CAAA,qBAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,CACA,GAAA,CAAA,iBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,CAAqB,IAAA,CAAA,iBAAA,CAAA,UAAA,CAArB,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,MAAA,CACA,GAAA,CAAA,OAAA,CAAA,CACA,yBAAA,WADA,CAEA,wBAAA,OAFA,CAGA,sCAAA,IAAA,CAAA,IAAA,EAHA,CAIA,oCAAA,iBAAA,CAAA,aAAA,CAJA,CAKA,eAAA,iCALA,CAAA,CAOA,GAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,kBAAA,EAAA,CACA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CACA,kBAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,GAAA,CACA,GAAA,CACA,GAAA,CAAA,GAAA,CAAA,iBAAA,CAAA,mBAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,YAAA,CAAA,KAAA,CACA,CACA,YAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CACA,MAAA,CAAA,GACA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,SAAA,CAAA,SAAA,CACA,WAAA,CAAA,OAAA,CAAA,OAAA,CACA,WAAA,CAAA,IAAA,CAAA,IAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CACA;;GAGA,QAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,CAAmB,wBAAA,OAAnB,CAAA,CACA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,IAAA,CACA,GAAA,CACA,UAAA,CAAA,GAAA,CAAA,iBAAA,CAAA,6BAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,YAAA,CAAA,KAAA,CACA,CACA,GAAA,CAAA,UAAA,CAAA,CACA;AACA,YAAA,CAAA,KAAA,CACA,CACA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CACA,YAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CACA,MAAA,IAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,MAAA,GAAA,OAAA,CACA,CACA,GAAA,CAAA,MAAA,CAAA,MAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,kBAAA,EAAA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,OAAA,CAAA,OAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CACA;;;GAIA,GAAA,CAAA,wBAAA,CAAA,IAAA,IAAA,CACA;;;;;;;;GASA,QAAA,CAAA,uBAAA,CAAA,QAAA,CAAA,WAAA,CAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,CACA;AACA;AACA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,qBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACA,GAAA,MAAA,CAAA,CACA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CACA,OAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KACA,CAHA,IAIA,CACA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,OAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,EACA,CACA,GAAA,IAAA,CAAA,IAAA,KAAA,OAAA,CAAA,KAAA,CAAA,CACA,KAAA,CAAA,mBAAA,EACA,CACA,GAAA,CAAA,SAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CACA,GAAA,CAAA,aAAA,CAAA,SAAA,CACA,GAAA,SAAA,CAAA,CAAA,CAAA,CACA,aAAA,CAAA,IAAA,CAAA,GAAA,CAAA,aAAA,CAAA,SAAA,CACA,CACA,GAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CACA,GAAA,CAAA,OAAA,CAAA,SAAA,CAAA,aAAA,CACA,GAAA,CAAA,aAAA,CAAA,aAAA,GAAA,SAAA,CAAA,kBAAA,CAAA,QAAA,CACA,GAAA,CAAA,OAAA,CAAA,CACA,wBAAA,aADA,CAEA,uBAAA,OAAA,CAAA,OAFA,CAAA,CAIA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CACA,GAAA,IAAA,GAAA,IAAA,CAAA,CACA,KAAA,CAAA,eAAA,EACA,CACA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CACA;AACA;AACA;AACA;AACA,GAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CACA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CACA,GAAA,CAAA,QAAA,CACA,GAAA,YAAA,GAAA,OAAA,CAAA,CACA,QAAA,CAAA,eAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CACA,CAFA,IAGA,CACA,QAAA,CAAA,IACA,CACA,MAAA,IAAA,CAAA,qBAAA,CAAA,UAAA,CAAA,IAAA,CAAA,YAAA,GAAA,OAAA,CAAA,QAAA,CACA,CACA,GAAA,CAAA,MAAA,CAAA,MAAA,CACA,GAAA,CAAA,OAAA,CAAA,WAAA,CAAA,kBAAA,EAAA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,WAAA,CAAA,OAAA,CAAA,OAAA,CACA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,EAAA,CACA,WAAA,CAAA,gBAAA,CAAA,gBAAA,EAAA,IAAA,CACA,WAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,WACA,CAEA;;;;;;;;;;;;;;;IAgBA;;GAGA,GAAA,CAAA,QAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,UAAA,CAAA,cAAA,CAAA,EACA,KAAA,CAAA,KAAA,CADA,EAEA,KAAA,CAAA,QAAA,CAFA,CAGA,GAAA,WAAA,CAAA,CACA,KAAA,IAAA,CAAA,cAAA,CACA,KAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CACA,KAAA,QAAA,CAAA,QAAA,EAAA,IACA,CAJA,IAKA,CACA,GAAA,CAAA,QAAA,CAAA,cAAA,CACA,KAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,IAAA,CACA,KAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,IAAA,CACA,KAAA,QAAA,CAAA,QAAA,CAAA,QAAA,EAAA,IACA,CACA,CACA,MAAA,CAAA,QACC,CAlBD,EAAA,CAoBA,GAAA,CAAA,kBAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,UAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CACA,KAAA,gBAAA,CAAA,gBAAA,CACA,KAAA,UAAA,CAAA,UAAA,CACA,KAAA,KAAA,CAAA,KAAA,CACA,KAAA,QAAA,CAAA,QAAA,CACA,KAAA,IAAA,CAAA,IAAA,CACA,KAAA,GAAA,CAAA,GACA,CACA,MAAA,CAAA,kBACC,CAVD,EAAA,CAYA;;;;;;;;;;;;;;;IAgBA;;;;;GAMA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,MAAA,CACA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,MAAA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAmB,CAAA,CAAA,KAAA,CAAA,MAAnB,CAAqC,CAAA,EAArC,CAAqC,CACrC,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CACA,OAAA,CAAA,CAAA,CACA,KACA,CACA,CACA,GAAA,CAAA,WAAA,CAAA,OAAA,EAAA,MAAA,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,EAAA,OAAA,CACA,GAAA,CAAA,WAAA,CAAA,CACA,KAAA,CAAA,oBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CACA,CACA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAmB,CAAA,CAAA,MAAA,CAAA,MAAnB,CAAsC,CAAA,EAAtC,CAAsC,CACtC,GAAA,CACA,KAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,KAAA,CAAA,CACA,KAAA,CAAA,eAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CACA,CAFA,IAGA,CACA,KAAA,CAAA,eAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CACA,CACA,CACA,CACA,CACA;;GAGA,GAAA,CAAA,OAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,OAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,IAAA,CACA,KAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CACA,GAAA,IAAA,CAAA,QAAA,EAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CACA,MACA,CACA,SAAA,CAAA,CAAA,CACA,CALA,CAMA,KAAA,QAAA,CAAA,CAAA,CAAA,QACA,CACA,MAAA,CAAA,OACC,CAZD,EAAA,CAaA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CACA,MAAA,UAAA,CAAA,CAAA,CACA,EAAA,CAAA,CAAA,CAAA,CACA,EAAA,CAAA,CAAA,CACA,CACA,CACA,QAAA,CAAA,UAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,QAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CACA,KAAA,kBACA,CACA,CACA,GAAA,CAAA,gBAAA,CACA,GAAA,SAAA,CAAA,CACA,gBAAA,CAAA,IAAA,CAAA,eAAA,CAAA,SAAA,CACA,CAFA,IAGA,CACA,gBAAA,CAAA,eACA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,QAAA,CACA,CACA,QAAA,CAAA,cAAA,EAAA,CACA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,CAAA,WAAA,CAAA,UAAA,EACA,CAAA,WAAA,CAAA,WADA,EAEA,mBAAA,IAAA,CAAA,WAAA,CAAA,IAFA,CAGA,GAAA,CAAA,KAAA,CAAA,CACA,KAAA,wBACA,CACA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CACA,CACA,QAAA,CAAA,YAAA,CAAA,QAAA,CAAA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,QAAA,CACA,CACA,QAAA,CAAA,cAAA,CAAA,QAAA,CAAA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,QAAA,CACA,CACA,QAAA,CAAA,qBAAA,EAAA,CACA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,CACA,KAAA,iCACA,CACA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CACA,CACA,QAAA,CAAA,eAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,QAAA,CAAA,sBAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,aAAA,CAAA,CAAA,GAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CACA,GAAA,CAAA,aAAA,CAAA,CACA,KAAA,qBACA,CACA,GAAA,SAAA,GAAA,SAAA,EAAA,SAAA,GAAA,IAAA,CAAA,CACA,SAAA,CAAA,CAAA,CACA,CACA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,QAAA,CACA,CACA,QAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,CACA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,CAAA,GAAA,IAAA,EAAA,UAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,CACA,KAAA,sBACA,CACA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAA,QAAA,CACA,CAEA;;;;;;;;;;;;;;;IAgBA;;;;GAKA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CACA,MAAA,WAAA,CACA,GAAA,CAAA,aAAA,CAAA,EAAA,CACA,IAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAwB,EAAA,CAAA,SAAA,CAAA,MAAxB,CAA+C,EAAA,EAA/C,CAA+C,CAC/C,aAAA,CAAA,EAAA,CAAA,CAAA,SAAA,CAAA,EAAA,CACA,CACA;AACA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,UAAA,CAA4C,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAyC,CAArF,CACA,CACA,CAEA;;;;;;;;;;;;;;;IAgBA;;;GAIA,GAAA,CAAA,UAAA,CAAA,aAAA,UAAA,CACA;;;;OAKA,QAAA,CAAA,UAAA,CAAA,GAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,GAAA,QAAA,GAAA,IAAA,EAAA,CAAA,CAAkC,QAAA,CAAA,IAAiB,CACnD,KAAA,YAAA,CAAA,CAAA,CACA,KAAA,kBAAA,CAAA,KAAA,CACA,KAAA,oBAAA,CAAA,KAAA,CACA,KAAA,UAAA,CAAA,EAAA,CACA,KAAA,MAAA,CAAA,IAAA,CACA,KAAA,UAAA,CAAA,IAAA,CACA,KAAA,QAAA,CAAA,IAAA,CACA,KAAA,gBAAA,CAAA,CAAA,CACA,KAAA,QAAA,CAAA,IAAA,CACA,KAAA,OAAA,CAAA,IAAA,CACA,KAAA,IAAA,CAAA,GAAA,CACA,KAAA,YAAA,CAAA,WAAA,CACA,KAAA,SAAA,CAAA,QAAA,CACA,KAAA,KAAA,CAAA,IAAA,CACA,KAAA,SAAA,CAAA,QAAA,CACA,KAAA,SAAA,CAAA,QAAA,CACA,KAAA,UAAA,CAAA,KAAA,kBAAA,CAAA,KAAA,KAAA,CAAA,CACA,KAAA,MAAA,CAAA,iBAAA,CAAA,OAAA,CACA,KAAA,aAAA,CAAA,SAAA,KAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,CACA,KAAA,CAAA,gBAAA,CAAA,CAAA,CACA,GAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CACA,KAAA,CAAA,kBAAA,CAAA,IAAA,CACA,KAAA,CAAA,oBAAA,EACA,CAHA,IAIA,CACA,KAAA,CAAA,MAAA,CAAA,KAAA,CACA,KAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,KAAA,CACA,CACA,CAXA,CAYA,KAAA,qBAAA,CAAA,SAAA,KAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,CACA,GAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CACA,KAAA,CAAA,oBAAA,EACA,CAFA,IAGA,CACA,KAAA,CAAA,MAAA,CAAA,KAAA,CACA,KAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,KAAA,CACA,CACA,CATA,CAUA,KAAA,QAAA,CAAA,GAAA,CAAA,OAAA,CAAA,SAAA,OAAA,CAAA,MAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,OAAA,CACA,KAAA,CAAA,OAAA,CAAA,MAAA,CACA,KAAA,CAAA,MAAA,EACS,CAJT,CAAA,CAKA;AACA;AACA,KAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAgD,CAAhD,CACA,CACA,UAAA,CAAA,SAAA,CAAA,qBAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,GAAA,CAAA,UAAA,CAAA,KAAA,YAAA,CACA,MAAA,UAAA,MAAA,CAAA,CAAkC,MAAA,CAAA,KAAA,CAAA,eAAA,CAAA,UAAA,CAAA,MAAA,CAAmD,CACrF,CAJA,CAKA,UAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,SAAA,IAAA,CAAA,CACA,MAAA,CAAA,IAAA,CAAA,IAAA,GAAA,IAAA,IACA,CAFA,CAGA,UAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CACA,GAAA,KAAA,MAAA,GAAA,iBAAA,CAAA,OAAA,CAAA,CACA;AACA,MACA,CACA,GAAA,KAAA,QAAA,GAAA,IAAA,CAAA,CACA,MACA,CACA,GAAA,KAAA,UAAA,CAAA,CACA,GAAA,KAAA,UAAA,GAAA,IAAA,CAAA,CACA,KAAA,gBAAA,EACA,CAFA,IAGA,CACA,GAAA,KAAA,kBAAA,CAAA,CACA,KAAA,YAAA,EACA,CAFA,IAGA,CACA,GAAA,KAAA,oBAAA,CAAA,CACA;AACA,KAAA,cAAA,EACA,CAHA,IAIA,CACA,KAAA,eAAA,EACA,CACA,CACA,CACA,CAlBA,IAmBA,CACA,KAAA,cAAA,EACA,CACA,CA9BA,CA+BA,UAAA,CAAA,SAAA,CAAA,aAAA,CAAA,SAAA,QAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA;AACA,KAAA,YAAA,CAAA,YAAA,GAAA,IAAA,CAAA,SAAA,SAAA,CAAA,CACA,OAAA,KAAA,CAAA,MAAA,EACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA,QAAA,CAAA,SAAA,CAAA,CACA,MACA,IAAA,CAAA,iBAAA,CAAA,SAAA,CACA,KAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,QAAA,EACA,MACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA,KAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,MAAA,EACA,MACA,QAVA,CAYS,CAbT,CAcA,CAjBA,CAkBA;AACA,UAAA,CAAA,SAAA,CAAA,gBAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,KAAA,aAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,aAAA,CAAA,KAAA,CAAA,YAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,aAAA,CACA,aAAA,CAAA,UAAA,GAAA,IAAA,CAAA,SAAA,GAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,CACA,KAAA,CAAA,UAAA,CAAA,GAAA,CACA,KAAA,CAAA,kBAAA,CAAA,KAAA,CACA,KAAA,CAAA,oBAAA,EACa,CALb,CAKa,KAAA,CAAA,aALb,CAMS,CAVT,CAWA,CAbA,CAcA,UAAA,CAAA,SAAA,CAAA,YAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA;AACA,GAAA,CAAA,GAAA,CAAA,KAAA,UAAA,CACA,KAAA,aAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,wBAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CACA,GAAA,CAAA,aAAA,CAAA,KAAA,CAAA,YAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,aAAA,CACA,aAAA,CAAA,UAAA,GAAA,IAAA,CAAA,SAAA,MAAA,CAAA,CACA,MAAA,CAAA,MAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,CACA,KAAA,CAAA,eAAA,CAAA,MAAA,CAAA,OAAA,EACA,KAAA,CAAA,kBAAA,CAAA,KAAA,CACA,GAAA,MAAA,CAAA,SAAA,CAAA,CACA,KAAA,CAAA,oBAAA,CAAA,IACA,CACA,KAAA,CAAA,oBAAA,EACa,CATb,CASa,KAAA,CAAA,aATb,CAUS,CAdT,CAeA,CAnBA,CAoBA,UAAA,CAAA,SAAA,CAAA,eAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,GAAA,CAAA,SAAA,CAAA,wBAAA,CAAA,KAAA,gBAAA,CACA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,qBAAA,CAAA,KAAA,YAAA,CAAA,KAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CACA;AACA,GAAA,CAAA,GAAA,CAAA,KAAA,UAAA,CACA,KAAA,aAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CACA,GAAA,CACA,WAAA,CAAA,uBAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,KAAA,CAAA,MAAA,CAAA,CAAA,CACA,KAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,KAAA,EACA,MACA,CACA,GAAA,CAAA,aAAA,CAAA,KAAA,CAAA,YAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,aAAA,CACA,aAAA,CACA,UADA,GAEA,IAFA,CAEA,SAAA,SAAA,CAAA,CACA,KAAA,CAAA,mBAAA,GACA,KAAA,CAAA,QAAA,CAAA,IAAA,CACA,KAAA,CAAA,eAAA,CAAA,SAAA,CAAA,OAAA,EACA,GAAA,SAAA,CAAA,SAAA,CAAA,CACA,KAAA,CAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CACA,KAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,OAAA,CACA,CAHA,IAIA,CACA,KAAA,CAAA,oBAAA,EACA,CACa,CAbb,CAaa,KAAA,CAAA,aAbb,CAcS,CA1BT,CA2BA,CAjCA,CAkCA,UAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,UAAA,CACA,GAAA,CAAA,WAAA,CAAA,wBAAA,CAAA,KAAA,gBAAA,CACA;AACA,GAAA,WAAA,CAAA,GAAA,IAAA,CAAA,IAAA,CAAA,CACA,KAAA,gBAAA,EAAA,CACA,CACA,CANA,CAOA,UAAA,CAAA,SAAA,CAAA,cAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,KAAA,aAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,WAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,eAAA,CAAA,KAAA,CAAA,YAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,eAAA,CACA,eAAA,CAAA,UAAA,GAAA,IAAA,CAAA,SAAA,QAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,CACA,KAAA,CAAA,SAAA,CAAA,QAAA,CACA,KAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,OAAA,CACa,CAJb,CAIa,KAAA,CAAA,qBAJb,CAKS,CATT,CAUA,CAZA,CAaA,UAAA,CAAA,SAAA,CAAA,cAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,KAAA,aAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,eAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,YAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,gBAAA,CACA,gBAAA,CAAA,UAAA,GAAA,IAAA,CAAA,SAAA,QAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,CACA,KAAA,CAAA,SAAA,CAAA,QAAA,CACA,KAAA,CAAA,eAAA,CAAA,KAAA,CAAA,KAAA,CAAA,IAAA,EAAA,EACA,KAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,OAAA,CACa,CALb,CAKa,KAAA,CAAA,aALb,CAMS,CAVT,CAWA,CAbA,CAcA,UAAA,CAAA,SAAA,CAAA,eAAA,CAAA,SAAA,WAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,KAAA,YAAA,CACA,KAAA,YAAA,CAAA,WAAA,CACA;AACA;AACA;AACA,GAAA,KAAA,YAAA,GAAA,GAAA,CAAA,CACA,KAAA,gBAAA,EACA,CACA,CATA,CAUA,UAAA,CAAA,SAAA,CAAA,WAAA,CAAA,SAAA,KAAA,CAAA,CACA,GAAA,KAAA,MAAA,GAAA,KAAA,CAAA,CACA,MACA,CACA,OAAA,KAAA,EACA,IAAA,CAAA,iBAAA,CAAA,SAAA,CACA;AACA;AACA;AACA,KAAA,MAAA,CAAA,KAAA,CACA,GAAA,KAAA,QAAA,GAAA,IAAA,CAAA,CACA,KAAA,QAAA,CAAA,MAAA,EACA,CACA,MACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA;AACA;AACA,KAAA,MAAA,CAAA,KAAA,CACA,GAAA,KAAA,QAAA,GAAA,IAAA,CAAA,CACA,KAAA,QAAA,CAAA,MAAA,EACA,CACA,MACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA;AACA;AACA;AACA,GAAA,CAAA,SAAA,CAAA,KAAA,MAAA,GAAA,iBAAA,CAAA,MAAA,CACA,KAAA,MAAA,CAAA,KAAA,CACA,GAAA,SAAA,CAAA,CACA,KAAA,gBAAA,GACA,KAAA,MAAA,EACA,CACA,MACA,IAAA,CAAA,iBAAA,CAAA,MAAA,CACA;AACA;AACA,KAAA,MAAA,CAAA,KAAA,CACA,KAAA,gBAAA,GACA,MACA,IAAA,CAAA,iBAAA,CAAA,QAAA,CACA;AACA;AACA;AACA,KAAA,MAAA,CAAA,QAAA,EAAA,CACA,KAAA,MAAA,CAAA,KAAA,CACA,KAAA,gBAAA,GACA,MACA,IAAA,CAAA,iBAAA,CAAA,KAAA,CACA;AACA;AACA;AACA;AACA,KAAA,MAAA,CAAA,KAAA,CACA,KAAA,gBAAA,GACA,MACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA;AACA;AACA;AACA;AACA,KAAA,MAAA,CAAA,KAAA,CACA,KAAA,gBAAA,GACA,MACA,QAAA;AA3DA,CA6DA,CAjEA,CAkEA,UAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,UAAA,CACA,OAAA,KAAA,MAAA,EACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA,KAAA,WAAA,CAAA,iBAAA,CAAA,MAAA,EACA,MACA,IAAA,CAAA,iBAAA,CAAA,SAAA,CACA,KAAA,WAAA,CAAA,iBAAA,CAAA,QAAA,EACA,MACA,IAAA,CAAA,iBAAA,CAAA,OAAA,CACA,KAAA,MAAA,GACA,MACA,QACA;AACA,MAZA,CAcA,CAfA,CAgBA,MAAA,CAAA,cAAA,CAAA,UAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,GAAA,CAAA,aAAA,CAAA,8BAAA,CAAA,KAAA,MAAA,CAAA,CACA,MAAA,IAAA,CAAA,kBAAA,CAAA,KAAA,YAAA,CAAA,KAAA,KAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAA,KAAA,SAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CACS,CAJT,CAKA,UAAA,CAAA,IALA,CAMA,YAAA,CAAA,IANA,CAAA,EAQA;;;OAIA,UAAA,CAAA,SAAA,CAAA,EAAA,CAAA,SAAA,IAAA,CAAA,cAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CACA,QAAA,CAAA,aAAA,EAAA,CACA,GAAA,IAAA,GAAA,SAAA,CAAA,aAAA,CAAA,CACA,KAAA,qCAAA,SAAA,CAAA,aAAA,CAAA,IACA,CACA,CACA,GAAA,CAAA,qBAAA,CAAA,gDACA,yCADA,CAEA,GAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,CAAA,SAAA,CACA,GAAA,CAAA,iBAAA,CAAA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,SAAA,CACA;AACA,QAAA,CAAA,uBAAA,CAAA,CAAA,CAAA,CACA,GAAA,CACA,aAAA,CAAA,CAAA,CAAA,CACA,MACA,CACA,MAAA,CAAA,CAAA,CAAuB,CACvB,GAAA,CACA,iBAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EACA,SAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CADA,EAEA,SAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAFA,CAGA,GAAA,CAAA,UAAA,CAAA,CACA,KAAA,EACA,CACA,MACA,CACA,MAAA,CAAA,CAAA,CACA,KAAA,CAAA,qBACA,CACA,CACA,GAAA,CAAA,KAAA,CAAA,CACA,UAAA,CAAA,aAAA,CADA,CAEA,eAAA,CAAA,uBAAA,CAAA,IAAA,CAFA,CAGA,gBAAA,CAAA,IAAA,CAHA,CAIA,gBAAA,CAAA,IAAA,CAJA,CAAA,CAMA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,IAAA,CACA,QAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CACA,QAAA,CAAA,MAAA,CAAA,cAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CACA,GAAA,KAAA,GAAA,IAAA,CAAA,CACA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CACA,CACA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CACA,IAAA,CAAA,YAAA,CAAA,QAAA,EACA,MAAA,WAAA,CACA,IAAA,CAAA,eAAA,CAAA,QAAA,CACA,CACA,CACA,MAAA,CAAA,MACA,CACA,QAAA,CAAA,6BAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,GAAA,IAAA,CAAA,CACA,KAAA,CAAA,qBACA,CACA,uBAAA,CAAA,CAAA,CACA,CACA,GAAA,CAAA,WAAA,CAAA,CACA,eAAA,CAAA,6BAAA,CADA,CAEA,gBAAA,CAAA,IAAA,CAFA,CAGA,gBAAA,CAAA,IAAA,CAHA,CAAA,CAKA,GAAA,CAAA,QAAA,CAAA,EAAA,SAAA,CAAA,cAAA,CAAA,EACA,SAAA,CAAA,KAAA,CADA,EAEA,SAAA,CAAA,SAAA,CAFA,CAAA,CAGA,GAAA,QAAA,CAAA,CACA,MAAA,CAAA,UAAA,CAAA,WAAA,CACA,CAFA,IAGA,CACA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CAAA,cAAA,CAAA,KAAA,CAAA,SAAA,CACA,CACA,CAxEA,CAyEA;;;;;OAMA,UAAA,CAAA,SAAA,CAAA,IAAA,CAAA,SAAA,WAAA,CAAA,UAAA,CAAA,CACA;AACA;AACA,MAAA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,UAAA,CACA,CAJA,CAKA;;OAGA,UAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,UAAA,CAAA,CACA,MAAA,MAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CACA,CAFA,CAGA;;OAGA,UAAA,CAAA,SAAA,CAAA,YAAA,CAAA,SAAA,QAAA,CAAA,CACA,KAAA,UAAA,CAAA,IAAA,CAAA,QAAA,EACA,KAAA,eAAA,CAAA,QAAA,CACA,CAHA,CAIA;;OAGA,UAAA,CAAA,SAAA,CAAA,eAAA,CAAA,SAAA,QAAA,CAAA,CACA,GAAA,CAAA,CAAA,CAAA,KAAA,UAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CACA,KAAA,UAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CACA,CACA,CALA,CAMA,UAAA,CAAA,SAAA,CAAA,gBAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,KAAA,cAAA,GACA,GAAA,CAAA,SAAA,CAAA,KAAA,UAAA,CAAA,KAAA,EAAA,CACA,SAAA,CAAA,OAAA,CAAA,SAAA,QAAA,CAAA,CACA,KAAA,CAAA,eAAA,CAAA,QAAA,CACS,CAFT,CAGA,CAPA,CAQA,UAAA,CAAA,SAAA,CAAA,cAAA,CAAA,UAAA,CACA,GAAA,KAAA,QAAA,GAAA,IAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,IAAA,CACA,OAAA,8BAAA,CAAA,KAAA,MAAA,CAAA,EACA,IAAA,CAAA,SAAA,CAAA,OAAA,CACA,KAAA,CAAA,KAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,QAAA,CAAA,CAAA,GACA,MACA,IAAA,CAAA,SAAA,CAAA,QAAA,CACA,IAAA,CAAA,SAAA,CAAA,KAAA,CACA,GAAA,CAAA,MAAA,CAAA,KAAA,OAAA,CACA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,CAAA,GACA,MACA,QACA,SAAA,CAAA,KAAA,CACA,MAXA,CAaA,GAAA,SAAA,CAAA,CACA,KAAA,QAAA,CAAA,IAAA,CACA,KAAA,OAAA,CAAA,IACA,CACA,CACA,CArBA,CAsBA,UAAA,CAAA,SAAA,CAAA,eAAA,CAAA,SAAA,QAAA,CAAA,CACA,GAAA,CAAA,aAAA,CAAA,8BAAA,CAAA,KAAA,MAAA,CAAA,CACA,OAAA,aAAA,EACA,IAAA,CAAA,SAAA,CAAA,OAAA,CACA,IAAA,CAAA,SAAA,CAAA,MAAA,CACA,GAAA,QAAA,CAAA,IAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,KAAA,QAAA,CAAA,CAAA,EACA,CACA,MACA,IAAA,CAAA,SAAA,CAAA,OAAA,CACA,GAAA,QAAA,CAAA,QAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EACA,CACA,MACA,IAAA,CAAA,SAAA,CAAA,QAAA,CACA,IAAA,CAAA,SAAA,CAAA,KAAA,CACA,GAAA,QAAA,CAAA,KAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EACA,CACA,MACA,QACA;AACA,GAAA,QAAA,CAAA,KAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EACA,CAtBA,CAwBA,CA1BA,CA2BA;;;OAIA,UAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CACA,QAAA,CAAA,QAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,GAAA,iBAAA,CAAA,MAAA,EACA,KAAA,MAAA,GAAA,iBAAA,CAAA,OADA,CAEA,GAAA,KAAA,CAAA,CACA,KAAA,WAAA,CAAA,iBAAA,CAAA,OAAA,CACA,CACA,MAAA,CAAA,KACA,CARA,CASA;;;OAIA,UAAA,CAAA,SAAA,CAAA,KAAA,CAAA,UAAA,CACA,QAAA,CAAA,OAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,GAAA,iBAAA,CAAA,OAAA,CACA,GAAA,KAAA,CAAA,CACA,KAAA,WAAA,CAAA,iBAAA,CAAA,OAAA,CACA,CACA,MAAA,CAAA,KACA,CAPA,CAQA;;;;OAKA,UAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CACA,QAAA,CAAA,QAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,GAAA,iBAAA,CAAA,OAAA,EACA,KAAA,MAAA,GAAA,iBAAA,CAAA,OADA,CAEA,GAAA,KAAA,CAAA,CACA,KAAA,WAAA,CAAA,iBAAA,CAAA,SAAA,CACA,CACA,MAAA,CAAA,KACA,CARA,CASA,MAAA,CAAA,UACC,CA7gBD,EAAA,CA+gBA;;;;;;;;;;;;;;;IAgBA;;;;;;;;;;GAWA,GAAA,CAAA,SAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,SAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CACA,KAAA,WAAA,CAAA,WAAA,CACA,GAAA,QAAA,WAAA,CAAA,QAAA,CAAA,CACA,KAAA,QAAA,CAAA,QACA,CAFA,IAGA,CACA,KAAA,QAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CACA,CACA,CACA;;;;OAKA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,UAAA,CACA,QAAA,CAAA,UAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CACA,MAAA,QAAA,KAAA,QAAA,CAAA,MAAA,CAAA,GAAA,CAAA,KAAA,QAAA,CAAA,IACA,CAHA,CAIA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,WAAA,CAAA,QAAA,CAAA,CACA,MAAA,IAAA,CAAA,SAAA,CAAA,WAAA,CAAA,QAAA,CACA,CAFA,CAGA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,UAAA,CACA,MAAA,CAAA,WAAA,EACA,CAFA,CAGA;;;;OAKA,SAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,SAAA,CAAA,CACA,QAAA,CAAA,OAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CACA,MAAA,MAAA,MAAA,CAAA,KAAA,WAAA,CAAA,QAAA,CACA,CALA,CAMA,MAAA,CAAA,cAAA,CAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA;;;WAIA,GAAA,CAAA,cAAA,CACA,GAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,QAAA,CAAA,IAAA,CAAA,CACA,GAAA,OAAA,GAAA,IAAA,CAAA,CACA,MAAA,KACA,CACA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CACA,MAAA,MAAA,MAAA,CAAA,KAAA,WAAA,CAAA,QAAA,CACS,CAZT,CAaA,UAAA,CAAA,IAbA,CAcA,YAAA,CAAA,IAdA,CAAA,EAgBA,MAAA,CAAA,cAAA,CAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CACA;;;WAIA,GAAA,CAAA,cAAA,CACA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,QAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CACA,MAAA,MAAA,MAAA,CAAA,KAAA,WAAA,CAAA,QAAA,CACS,CART,CASA,UAAA,CAAA,IATA,CAUA,YAAA,CAAA,IAVA,CAAA,EAYA,MAAA,CAAA,cAAA,CAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,QAAA,CAAA,MACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,cAAA,CAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,QAAA,CAAA,IACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,cAAA,CAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,CAAA,aAAA,CAAA,KAAA,QAAA,CAAA,IAAA,CACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,cAAA,CAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,WAAA,CAAA,OAAA,EACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA;;;;;OAMA,SAAA,CAAA,SAAA,CAAA,GAAA,CAAA,SAAA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,QAAA,GAAA,IAAA,EAAA,CAAA,CAAkC,QAAA,CAAA,IAAiB,CACnD,QAAA,CAAA,KAAA,CAAA,CAAA,cAAA,EAAA,CAAA,YAAA,CAAA,IAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CACA,KAAA,YAAA,CAAA,KAAA,EACA,MAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,WAAA,CAAA,KAAA,QAAA,CAAA,KAAA,QAAA,EAAA,CAAA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CACA,CALA,CAMA;;;;;;OAOA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,SAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CACA,GAAA,MAAA,GAAA,IAAA,EAAA,CAAA,CAAgC,MAAA,CAAA,YAAA,CAAA,GAA2B,CAC3D,QAAA,CAAA,WAAA,CAAA,CAAA,UAAA,EAAA,CAAA,UAAA,CAAA,eAAA,CAAA,IAAA,CAAA,CAAA,YAAA,CAAA,IAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CACA,KAAA,YAAA,CAAA,WAAA,EACA,GAAA,CAAA,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CACA,GAAA,CAAA,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAA4C,QAA5C,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CAAA,EACA,KAAA,CAAA,IAAA,CAAA,WAAA,CADA,CACA,CACA,aAAA,CAAA,aAAA,CAAA,CAAA,IAAA,CAAA,WACA,CACA,MAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,WAAA,CAAA,KAAA,QAAA,CAAA,KAAA,QAAA,EAAA,CAAA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,aAAA,CACA,CAXA,CAYA;;;OAIA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,QAAA,CAAA,QAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CACA,KAAA,YAAA,CAAA,QAAA,EACA,MAAA,MAAA,WAAA,CAAA,YAAA,GAAA,IAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,YAAA,CAAA,KAAA,CAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,KAAA,CAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,EAAA,UAAA,EACS,CAHT,CAIA,CARA,CASA;;;;;;;;;;;;;;;;OAiBA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,UAAA,CACA,QAAA,CAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,CACA,QAAA,CAAA,EADA,CAEA,KAAA,CAAA,EAFA,CAAA,CAIA,MAAA,MAAA,aAAA,CAAA,WAAA,EAAA,IAAA,CAAA,UAAA,CAAiE,MAAA,CAAA,WAAsB,CAAvF,CACA,CAPA,CAQA,SAAA,CAAA,SAAA,CAAA,aAAA,CAAA,SAAA,WAAA,CAAA,SAAA,CAAA,CACA,MAAe,CAAA,MAAA,CAAA,kCAAA,CAAA,WAAA,CAAA,CAAA,CAAS,IAAT,CAAS,IAAA,EAAT,CAAS,IAAA,EAAT,CAAS,UAAA,CACxB,GAAA,CAAA,GAAA,CAAA,QAAA,CACA,GAAA,CAAA,EAAA,CAAA,EAAA,CACA,MAAmB,CAAA,MAAA,CAAA,kCAAA,CAAA,aAAA,CAAA,CAAA,CAAW,IAAX,CAAW,SAAA,EAAA,CAAA,CAC9B,OAAA,EAAA,CAAA,KAAA,EACA,IAAA,EAAA,CACA,GAAA,CAAA,CACA;AACA,SAAA,CAAA,SAFA,CAAA,CAIA,MAAA,CAAA,CAAA,SAAA,CAAA,KAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CACA,IAAA,EAAA,CACA,QAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CACA,CAAA,EAAA,CAAA,WAAA,CAAA,QAAA,EAAA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,QAAA,EACA,CAAA,EAAA,CAAA,WAAA,CAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,EACA,GAAA,EAAA,QAAA,CAAA,aAAA,EAAA,IAAA,CAAA,CAAA,MAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CACA,MAAA,CAAA,CAAA,SAAA,CAAA,KAAA,aAAA,CAAA,WAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,CACA,IAAA,EAAA,CACA,EAAA,CAAA,IAAA,GACA,EAAA,CAAA,KAAA,CAAA,CAAA,CACA,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,UAAA,CAAA,CAhBA,CAkBa,CAnBM,CAoBV,CAvBM,CAwBf,CAzBA,CA0BA;;;;;;;;;;;;;;;;;;;OAoBA,SAAA,CAAA,SAAA,CAAA,IAAA,CAAA,SAAA,OAAA,CAAA,CACA,QAAA,CAAA,MAAA,CAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,IAAA,CACA,MAAA,MAAA,WAAA,CAAA,YAAA,GAAA,IAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,CACA,GAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,QAAA,CACA,eAAA,GADA,CACA,EAAA,CAAA,SADA,CACA,EAAA,CAAA,UADA,CAAA,CAEA,MAAA,CAAA,IAAA,CAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,EAAA,UAAA,EACS,CALT,CAMA,CATA,CAUA;;;;OAKA,SAAA,CAAA,SAAA,CAAA,WAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,QAAA,CAAA,aAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CACA,KAAA,YAAA,CAAA,aAAA,EACA,MAAA,MAAA,WAAA,CAAA,YAAA,GAAA,IAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,WAAA,CAAA,KAAA,CAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,EAAA,CAAA,CACA,MAAA,CAAA,KAAA,CAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,EAAA,UAAA,EACS,CAHT,CAIA,CARA,CASA;;;;;;;;OASA,SAAA,CAAA,SAAA,CAAA,cAAA,CAAA,SAAA,QAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,QAAA,CAAA,gBAAA,CAAA,CAAA,YAAA,EAAA,CAAA,CAAA,SAAA,CAAA,CACA,KAAA,YAAA,CAAA,gBAAA,EACA,MAAA,MAAA,WAAA,CAAA,YAAA,GAAA,IAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,cAAA,CAAA,KAAA,CAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,EAAA,CAAA,CACA,MAAA,CAAA,KAAA,CAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,EAAA,UAAA,EACS,CAHT,CAIA,CARA,CASA;;;OAIA,SAAA,CAAA,SAAA,CAAA,cAAA,CAAA,UAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,QAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CACA,KAAA,YAAA,CAAA,gBAAA,EACA,MAAA,MAAA,WAAA,CAAA,YAAA,GAAA,IAAA,CAAA,SAAA,SAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,cAAA,CAAA,KAAA,CAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,EAAA,CAAA,CACA,MAAA,CAAA,KAAA,CAAA,WAAA,CACA,WADA,CACA,WADA,CACA,SADA,EAEA,UAFA,GAGA,IAHA,CAGA,SAAA,GAAA,CAAA,CACA,GAAA,GAAA,GAAA,IAAA,CAAA,CACA,KAAA,CAAA,aAAA,EACA,CACA,MAAA,CAAA,GACa,CARb,CASS,CAXT,CAYA,CAhBA,CAiBA,SAAA,CAAA,SAAA,CAAA,YAAA,CAAA,SAAA,IAAA,CAAA,CACA,GAAA,KAAA,QAAA,CAAA,IAAA,GAAA,EAAA,CAAA,CACA,KAAA,CAAA,oBAAA,CAAA,IAAA,CACA,CACA,CAJA,CAKA,MAAA,CAAA,SACC,CApRD,EAAA,CAsRA;;;;GAKA,GAAA,CAAA,WAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,WAAA,CAAA,KAAA,CAAA,CACA,KAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CACA,CACA,kBACA,WAAA,CAAA,SAAA,CAAA,UAAA,CAAA,UAAA,CACA,MAAA,MAAA,QACA,CAFA,CAGA,kBACA,WAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,UAAA,CAAA,CACA,CADA,CAEA,MAAA,CAAA,WACC,CAZD,EAAA,CAcA,GAAA,CAAA,UAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,UAAA,EAAA,CACA,KAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CACA,KAAA,EAAA,CAAA,gBACA,CACA;;;;;OAMA,UAAA,CAAA,SAAA,CAAA,UAAA,CAAA,SAAA,OAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,GAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CACA,KAAA,EAAA,GACA,KAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,OAAA,EACA,OAAA,CACA,UADA,GAEA,IAFA,CAEA,UAAA,CAA+B,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA,EAAA,CAA+B,CAF9D,CAE8D,UAAA,CAAe,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA,EAAA,CAA+B,CAF5G,CAGA,CARA,CASA;;OAGA,UAAA,CAAA,SAAA,CAAA,KAAA,CAAA,UAAA,CACA,KAAA,GAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA,CACA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CACS,CAFT,EAGA,KAAA,GAAA,CAAA,KAAA,EACA,CALA,CAMA,MAAA,CAAA,UACC,CA9BD,EAAA,CAgCA;;;;;GAMA,GAAA,CAAA,WAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,WAAA,CAAA,GAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CACA,KAAA,OAAA,CAAA,IAAA,CACA,KAAA,QAAA,CAAA,KAAA,CACA,KAAA,IAAA,CAAA,GAAA,CACA,GAAA,KAAA,IAAA,GAAA,IAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,KAAA,IAAA,CAAA,OAAA,CACA,GAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CACA,KAAA,OAAA,CAAA,WAAA,CAAA,cAAA,CAAA,OAAA,CACA,CACA,CACA,KAAA,gBAAA,CAAA,KAAA,CACA,KAAA,aAAA,CAAA,YAAA,CACA,KAAA,KAAA,CAAA,IAAA,CACA,KAAA,QAAA,CAAA,OAAA,CACA,KAAA,sBAAA,CAAA,gCAAA,CACA,KAAA,mBAAA,CAAA,6BAAA,CACA,KAAA,WAAA,CAAA,GAAA,CAAA,UACA,CACA,WAAA,CAAA,cAAA,CAAA,SAAA,MAAA,CAAA,CACA,GAAA,CAAA,YAAA,CAAA,MAAA,CAAA,yBAAA,CAAA,EAAA,IAAA,CACA,GAAA,YAAA,EAAA,IAAA,CAAA,CACA,MAAA,KACA,CACA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,YAAA,CAAA,CACA,MAAA,CAAA,GAAA,CAAA,MACA,CAPA,CAQA,WAAA,CAAA,SAAA,CAAA,YAAA,CAAA,UAAA,CACA;AACA;AACA,GAAA,KAAA,IAAA,GAAA,IAAA,EACA,KAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CADA,EAEA,KAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAFA,CAEA,CACA,MAAA,MAAA,IAAA,CAAA,QAAA,CAAA,QAAA,GAAA,IAAA,CAAA,SAAA,QAAA,CAAA,CACA,GAAA,QAAA,GAAA,IAAA,CAAA,CACA,MAAA,CAAA,QAAA,CAAA,WACA,CAFA,IAGA,CACA,MAAA,KACA,CACa,CAPb,CAOa,UAAA,CAAe,MAAA,KAAe,CAP3C,CAQA,CAXA,IAYA,CACA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CACA,CACA,CAlBA,CAmBA,WAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CACA,GAAA,KAAA,QAAA,CAAA,CACA,KAAA,CAAA,UAAA,EACA,CAFA,IAGA,CACA,MAAA,MAAA,OACA,CACA,CAPA,CAQA;;;OAIA,WAAA,CAAA,SAAA,CAAA,OAAA,CAAA,UAAA,CACA,MAAA,MAAA,QACA,CAFA,CAGA;;;;;;OAOA,WAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,SAAA,GAAA,CAAA,CACA,MAAA,MAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CACA,CAFA,CAGA,WAAA,CAAA,SAAA,CAAA,WAAA,CAAA,SAAA,WAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,KAAA,QAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,KAAA,aAAA,CAAA,WAAA,CAAA,SAAA,CAAA,KAAA,KAAA,CAAA,CACA,KAAA,WAAA,CAAA,UAAA,CAAA,OAAA,EACA,MAAA,CAAA,OACA,CAJA,IAKA,CACA,MAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,CACA,CACA,CATA,CAUA;;OAGA,WAAA,CAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CACA,KAAA,QAAA,CAAA,IAAA,CACA,KAAA,IAAA,CAAA,IAAA,CACA,KAAA,WAAA,CAAA,KAAA,EACA,CAJA,CAKA,WAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,UAAA,CACA,MAAA,MAAA,mBACA,CAFA,CAGA,WAAA,CAAA,SAAA,CAAA,qBAAA,CAAA,SAAA,IAAA,CAAA,CACA,KAAA,mBAAA,CAAA,IACA,CAFA,CAGA,WAAA,CAAA,SAAA,CAAA,qBAAA,CAAA,UAAA,CACA,MAAA,MAAA,sBACA,CAFA,CAGA,WAAA,CAAA,SAAA,CAAA,wBAAA,CAAA,SAAA,IAAA,CAAA,CACA,KAAA,sBAAA,CAAA,IACA,CAFA,CAGA,MAAA,CAAA,WACC,CAtGD,EAAA,CAwGA;;;;;;;;;;;;;;;IAgBA;;;;;GAMA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CACA;AACA;AACA,GAAA,CAAA,WAAA,CAAA,CAAA,CACA;AACA;AACA;AACA,GAAA,CAAA,SAAA,CAAA,IAAA,CACA,GAAA,CAAA,UAAA,CAAA,KAAA,CACA,GAAA,CAAA,WAAA,CAAA,CAAA,CACA,QAAA,CAAA,QAAA,EAAA,CACA,MAAA,CAAA,WAAA,GAAA,CACA,CACA,GAAA,CAAA,iBAAA,CAAA,KAAA,CACA;AACA;AACA;AACA,QAAA,CAAA,eAAA,EAAA,CACA,GAAA,CAAA,IAAA,CAAA,EAAA,CACA,IAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAwB,EAAA,CAAA,SAAA,CAAA,MAAxB,CAA+C,EAAA,EAA/C,CAA+C,CAC/C,IAAA,CAAA,EAAA,CAAA,CAAA,SAAA,CAAA,EAAA,CACA,CACA,GAAA,CAAA,iBAAA,CAAA,CACA,iBAAA,CAAA,IAAA,CACA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CACA,CACA,CACA,QAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CACA,SAAA,CAAA,UAAA,CAAA,UAAA,CACA,SAAA,CAAA,IAAA,CACA,CAAA,CAAA,OAAA,CAAA,QAAA,EAAA,CACS,CAHT,CAGS,MAHT,CAIA,CACA;AACA;AACA;AACA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,EAAA,CACA,IAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAwB,EAAA,CAAA,SAAA,CAAA,MAAxB,CAA+C,EAAA,EAA/C,CAA+C,CAC/C,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,EAAA,CACA,CACA,GAAA,iBAAA,CAAA,CACA,MACA,CACA,GAAA,OAAA,CAAA,CACA,eAAA,CAAA,IAAA,CAAA,KAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA,IAAA,CAAA,EACA,MACA,CACA,GAAA,CAAA,QAAA,CAAA,QAAA,IAAA,UAAA,CACA,GAAA,QAAA,CAAA,CACA,eAAA,CAAA,IAAA,CAAA,KAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA,IAAA,CAAA,EACA,MACA,CACA,GAAA,WAAA,CAAA,EAAA,CAAA,CACA,yEACA,WAAA,EAAA,CACA,CACA,GAAA,CAAA,UAAA,CACA,GAAA,WAAA,GAAA,CAAA,CAAA,CACA,WAAA,CAAA,CAAA,CACA,UAAA,CAAA,CACA,CAHA,IAIA,CACA,UAAA,CAAA,CAAA,WAAA,CAAA,IAAA,CAAA,MAAA,EAAA,EAAA,IACA,CACA,aAAA,CAAA,UAAA,CACA,CACA,GAAA,CAAA,OAAA,CAAA,KAAA,CACA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CACA,GAAA,OAAA,CAAA,CACA,MACA,CACA,OAAA,CAAA,IAAA,CACA,GAAA,iBAAA,CAAA,CACA,MACA,CACA,GAAA,SAAA,GAAA,IAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,CACA,WAAA,CAAA,CACA,CACA,YAAA,CAAA,SAAA,CAAA,CACA,aAAA,CAAA,CAAA,CACA,CANA,IAOA,CACA,GAAA,CAAA,UAAA,CAAA,CACA,WAAA,CAAA,CACA,CACA,CACA,CACA,aAAA,CAAA,CAAA,CAAA,CACA,UAAA,CAAA,UAAA,CACA,UAAA,CAAA,IAAA,CACA,IAAA,CAAA,IAAA,CACK,CAHL,CAGK,OAHL,CAAA,CAIA,MAAA,CAAA,IACA,CACA;;;;;;GAOA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CACA,EAAA,CAAA,KAAA,CACA,CAEA;;;;;;;;;;;;;;;IAgBA;;;GAIA,GAAA,CAAA,cAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,cAAA,CAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,YAAA,CAAA,oBAAA,CAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,KAAA,WAAA,CAAA,IAAA,CACA,KAAA,UAAA,CAAA,IAAA,CACA,KAAA,QAAA,CAAA,IAAA,CACA,KAAA,OAAA,CAAA,IAAA,CACA,KAAA,SAAA,CAAA,KAAA,CACA,KAAA,UAAA,CAAA,KAAA,CACA,KAAA,IAAA,CAAA,GAAA,CACA,KAAA,OAAA,CAAA,MAAA,CACA,KAAA,QAAA,CAAA,OAAA,CACA,KAAA,KAAA,CAAA,IAAA,CACA,KAAA,aAAA,CAAA,YAAA,CAAA,KAAA,EAAA,CACA,KAAA,qBAAA,CAAA,oBAAA,CAAA,KAAA,EAAA,CACA,KAAA,SAAA,CAAA,QAAA,CACA,KAAA,cAAA,CAAA,aAAA,CACA,KAAA,iBAAA,CAAA,gBAAA,CACA,KAAA,QAAA,CAAA,OAAA,CACA,KAAA,KAAA,CAAA,IAAA,CACA,KAAA,QAAA,CAAA,GAAA,CAAA,OAAA,CAAA,SAAA,OAAA,CAAA,MAAA,CAAA,CACA,KAAA,CAAA,QAAA,CAAA,OAAA,CACA,KAAA,CAAA,OAAA,CAAA,MAAA,CACA,KAAA,CAAA,MAAA,EACS,CAJT,CAKA,CACA;;OAGA,cAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CACA,GAAA,CAAA,IAAA,CAAA,IAAA,CACA,QAAA,CAAA,YAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CACA,GAAA,QAAA,CAAA,CACA,eAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CACA,MACA,CACA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA,CACA,IAAA,CAAA,WAAA,CAAA,GAAA,CACA,QAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CACA,GAAA,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CACA,GAAA,IAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,CACA,IAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,KAAA,CACA,CACA,CACA,GAAA,IAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,CACA,GAAA,CAAA,yBAAA,CAAA,gBAAA,CACA,CACA;AACA,GAAA,CACA,IADA,CACA,IAAA,CAAA,IADA,CACA,IAAA,CAAA,OADA,CACA,IAAA,CAAA,KADA,CACA,IAAA,CAAA,QADA,EAEA,IAFA,CAEA,SAAA,GAAA,CAAA,CACA,GAAA,IAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,CACA,GAAA,CAAA,4BAAA,CAAA,gBAAA,CACA,CACA,IAAA,CAAA,WAAA,CAAA,IAAA,CACA,GAAA,CAAA,GAAA,CACA,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,YAAA,KAAA,SAAA,CAAA,QAAA,CACA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,SAAA,EAAA,CACA,GAAA,CAAA,SAAA,EAAA,IAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,YAAA,KAAA,SAAA,CAAA,KAAA,CACA,eAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,CACA,MACA,CACA,GAAA,CAAA,WAAA,CAAA,IAAA,CAAA,aAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAAA,CAAA,CACA,eAAA,CAAA,IAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CACa,CAjBb,CAkBA,CACA;;;WAIA,QAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CACA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CACA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CACA,GAAA,MAAA,CAAA,cAAA,CAAA,CACA,GAAA,CACA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA,CACA,GAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CACA,OAAA,CAAA,MAAA,CACA,CAFA,IAGA,CACA,OAAA,EACA,CACA,CACA,MAAA,CAAA,CAAA,CACA,MAAA,CAAA,CAAA,CACA,CACA,CAbA,IAcA,CACA,GAAA,GAAA,GAAA,IAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,OAAA,EAAA,CACA,GAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,EACA,GAAA,IAAA,CAAA,cAAA,CAAA,CACA,MAAA,CAAA,IAAA,CAAA,cAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CACA,CAFA,IAGA,CACA,MAAA,CAAA,GAAA,CACA,CACA,CATA,IAUA,CACA,GAAA,MAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,UAAA,CAAA,UAAA,EAAA,CAAA,QAAA,EAAA,CACA,MAAA,CAAA,GAAA,CACA,CAHA,IAIA,CACA,GAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,CACA,MAAA,CAAA,GAAA,CACA,CACA,CACA,CACA,CACA,GAAA,KAAA,SAAA,CAAA,CACA,WAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CACA,CAFA,IAGA,CACA,KAAA,UAAA,CAAA,KAAA,CAAA,YAAA,CAAA,WAAA,CAAA,KAAA,QAAA,CACA,CACA,CA1FA,CA2FA,kBACA,cAAA,CAAA,SAAA,CAAA,UAAA,CAAA,UAAA,CACA,MAAA,MAAA,QACA,CAFA,CAGA,kBACA,cAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,SAAA,CAAA,CACA,KAAA,SAAA,CAAA,IAAA,CACA,KAAA,UAAA,CAAA,SAAA,EAAA,KAAA,CACA,GAAA,KAAA,UAAA,GAAA,IAAA,CAAA,CACA,IAAA,CAAA,KAAA,UAAA,CACA,CACA,GAAA,KAAA,WAAA,GAAA,IAAA,CAAA,CACA,KAAA,WAAA,CAAA,KAAA,EACA,CACA,CATA,CAUA,cAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,SAAA,MAAA,CAAA,CACA;AACA;AACA,GAAA,CAAA,iBAAA,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,GAAA,CACA,GAAA,CAAA,eAAA,CAAA,CACA;AACA,GAFA,CAGA;AACA,GAJA,CAAA,CAMA,GAAA,CAAA,gBAAA,CAAA,eAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAAA,CAAA,CACA,GAAA,CAAA,0BAAA,CAAA,KAAA,qBAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAAA,CAAA,CACA,MAAA,CAAA,iBAAA,EAAA,gBAAA,EAAA,0BACA,CAbA,CAcA,MAAA,CAAA,cACC,CAtJD,EAAA,CAuJA;;;;GAKA,GAAA,CAAA,gBAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CACA,KAAA,cAAA,CAAA,cAAA,CACA,KAAA,GAAA,CAAA,GAAA,CACA,KAAA,QAAA,CAAA,CAAA,CAAA,QACA,CACA,MAAA,CAAA,gBACC,CAPD,EAAA,CAQA,QAAA,CAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CACA,GAAA,SAAA,GAAA,IAAA,EAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CACA,OAAA,CAAA,eAAA,CAAA,CAAA,YAAA,SACA,CACA,CACA,QAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,MAAyB,CAAA,kDAAA,CAAA,CAAzB,GAAiC,WAAjC,CAAoD,kDAAA,CAAA,CAAA,CAAQ,WAA5D,CAA4D,YAA5D,CACA,OAAA,CAAA,4BAAA,CAAA,CAAA,SAAA,OACA,CACA;;GAGA,QAAA,CAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,eAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CACA,GAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,SAAA,CACA,GAAA,CAAA,OAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAkC,WAAA,CAAA,OAAlC,CAAA,CACA,cAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CACA,iBAAA,CAAA,OAAA,CAAA,CACA,MAAA,IAAA,CAAA,cAAA,CAAA,GAAA,CAAA,WAAA,CAAA,MAAA,CAAA,OAAA,CAAA,WAAA,CAAA,IAAA,CAAA,WAAA,CAAA,YAAA,CAAA,WAAA,CAAA,oBAAA,CAAA,WAAA,CAAA,OAAA,CAAA,WAAA,CAAA,YAAA,CAAA,WAAA,CAAA,OAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,IAAA,CACA,CAEA;;;;;;;;;;;;;;;IAgBA;;;;;GAMA,GAAA,CAAA,OAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CACA,KAAA,OAAA,CAAA,IAAA,CACA,QAAA,CAAA,KAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CACA,MAAA,IAAA,CAAA,SAAA,CAAA,WAAA,CAAA,GAAA,CACA,CACA,KAAA,YAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,KAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CACA,KAAA,IAAA,CAAA,GAAA,CACA,GAAA,GAAA,EAAA,IAAA,CAAA,CACA,KAAA,OAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,CACA,CAFA,IAGA,CACA,GAAA,CAAA,iBAAA,CAAA,KAAA,YAAA,CAAA,MAAA,EAAA,CACA,GAAA,iBAAA,EAAA,IAAA,CAAA,CACA,KAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,EAAA,CACA,CACA,CACA,KAAA,UAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,IAAA,CACA,CACA;;;OAIA,OAAA,CAAA,SAAA,CAAA,GAAA,CAAA,SAAA,IAAA,CAAA,CACA,QAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CACA,GAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,CACA,KAAA,uBACA,CACA,GAAA,kBAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CACA,KAAA,4DACA,CACA,CACA,QAAA,CAAA,KAAA,CAAA,CAAA,UAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CACA,GAAA,KAAA,OAAA,EAAA,IAAA,CAAA,CACA,KAAA,IAAA,CAAA,KAAA,CAAA,gDAAA,CACA,CACA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,SAAA,CAAA,KAAA,YAAA,CAAA,KAAA,OAAA,CAAA,CACA,GAAA,IAAA,EAAA,IAAA,CAAA,CACA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CACA,CAFA,IAGA,CACA,MAAA,CAAA,GACA,CACA,CApBA,CAqBA;;;OAIA,OAAA,CAAA,SAAA,CAAA,UAAA,CAAA,SAAA,GAAA,CAAA,CACA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CACA,GAAA,MAAA,CAAA,CAAA,GAAA,QAAA,CAAA,CACA,KAAA,uBACA,CACA,GAAA,CAAA,kBAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CACA,KAAA,0DACA,CACA,GAAA,CACA,QAAA,CAAA,WAAA,CAAA,CAAA,CACA,CACA,MAAA,CAAA,CAAA,CACA,KAAA,iDACA,CACA,CACA,QAAA,CAAA,YAAA,CAAA,CAAA,UAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CACA,MAAA,IAAA,CAAA,SAAA,CAAA,KAAA,YAAA,CAAA,GAAA,CACA,CAjBA,CAkBA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,YAAA,CAAA,kBAAA,EACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,OAAA,CAAA,SAAA,CAAA,qBAAA,CAAA,SAAA,IAAA,CAAA,CACA,QAAA,CAAA,uBAAA,CAAA,CAAA,qBAAA,EAAA,CAAA,CAAA,SAAA,CAAA,CACA,KAAA,YAAA,CAAA,qBAAA,CAAA,IAAA,CACA,CAHA,CAIA,OAAA,CAAA,SAAA,CAAA,wBAAA,CAAA,SAAA,IAAA,CAAA,CACA,QAAA,CAAA,0BAAA,CAAA,CAAA,qBAAA,EAAA,CAAA,CAAA,SAAA,CAAA,CACA,KAAA,YAAA,CAAA,wBAAA,CAAA,IAAA,CACA,CAHA,CAIA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,IACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CACA,GAAA,CAAA,cAAA,CACA,MAAA,MAAA,UACS,CAHT,CAIA,UAAA,CAAA,IAJA,CAKA,YAAA,CAAA,IALA,CAAA,EAOA,MAAA,CAAA,OACC,CAhGD,EAAA,CAiGA;;GAGA,GAAA,CAAA,gBAAA,CAAA,aAAA,UAAA,CACA,QAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,CACA,KAAA,QAAA,CAAA,OACA,CACA;;;OAIA,gBAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CACA,KAAA,QAAA,CAAA,YAAA,CAAA,SAAA,GACA,MAAA,CAAA,OAAA,CAAA,OAAA,EACA,CAHA,CAIA,MAAA,CAAA,gBACC,CAbD,EAAA,CAeA;;;;;;;;;;;;;;;IAgBA;;GAGA,GAAA,CAAA,YAAA,CAAA,SAAA,CACA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CACA,MAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,SAAA,EAAA,CAAA,GAAA,CACA,CACA,QAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,gBAAA,CAAA,CACA;AACA,SAAA,CAAA,SAFA,CAGA,SAAA,CAAA,SAHA,CAIA,YAAA,CAAA,YAJA,CAKA,OAAA,CAAA,OALA,CAMA,SAAA,CAAA,SANA,CAAA,CAQA,QAAA,CAAA,QAAA,CAAA,eAAA,CAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,SAAA,CACA;AACA,IAFA,CAGA,CACA,eAAA,CAAgB,kDAAA,CAAA,CAAhB,CAAA,CAGA;;;8MCh/GA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,oBAAA,GAAA,CAAA,8CAAA,CAAA,mBAAA,CAAA,wBAAA,oDAAA,CAAA,CACA;;;0RCDA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAe,4BAAA,mBAAA,CAAA,SAAA,CAAA,CAAA,o/EAAA,C;;o+CCSf,GAAM,CAAA,MAAM,CAAW,CACrB,CACE,IAAI,CAAE,EADR,CAEE,SAAS,CAAE,+CAAA,CAAA,iBAAA,CAFb,CADqB,CAAvB,CAgBA,GAAa,CAAA,qBAAb,mCAAA,CAAa,qBAAqB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CATjC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS,CACR,OAAO,CAAE,CACP,4CAAA,CAAA,cAAA,CADO,CAEP,2CAAA,CAAA,aAAA,CAFO,CAGP,2CAAA,CAAA,aAAA,CAHO,CAIP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAJO,CADD,CAOR,YAAY,CAAE,CAAC,+CAAA,CAAA,iBAAA,CAAD,CAPN,CAAT,CASiC,CAAA,CAArB,qBAAqB,CAArB,C;;sNCzBb,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAe,4BAAA,mBAAA,CAAA,SAAA,CAAA,CAAA,6MAAA,C;;80ECmBf,GAAa,CAAA,eAAb,yBAsBE,yBAAoB,MAApB,CAA2C,IAA3C,CAA+D,KAA/D,CAA8F,MAA9F,CAAqH,aAArH,CAA4J,SAA5J,CAAgM,OAAhM,CAAgO,WAAhO,CAAkQ,OAAlQ,CAA6R,CAAzQ,KAAA,MAAA,CAAA,MAAA,CAAuB,KAAA,IAAA,CAAA,IAAA,CAAoB,KAAA,KAAA,CAAA,KAAA,CAA+B,KAAA,MAAA,CAAA,MAAA,CAAuB,KAAA,aAAA,CAAA,aAAA,CAAuC,KAAA,SAAA,CAAA,SAAA,CAAoC,KAAA,OAAA,CAAA,OAAA,CAAgC,KAAA,WAAA,CAAA,WAAA,CAAkC,KAAA,OAAA,CAAA,OAAA,CAfnQ,KAAA,GAAA,CAAM,gEAAN,CAGA,KAAA,KAAA,CAAQ,EAAR,CACA,KAAA,WAAA,CAAc,EAWsR,CAtBrS,8CAwBE,QAxBF,CAwBE,mBAAQ,CAEN,KAAK,KAAL,CAAa,KAAK,KAAL,CAAW,QAAX,CAAoB,MAAjC,CACA;;8CAIA,GAAI,CAAA,MAAM,CAAG,KAAK,aAAL,CAAmB,UAAnB,EAAb,CACF,KAAK,UAAL,CAAkB,KAAK,SAAL,CAAe,UAAf,gBAAyC,MAAzC,UAAlB,CACA,KAAK,IAAL,CAAY,KAAK,UAAL,CAAgB,YAAhB,EACX,CAlCH,SAoCE,SApCF,CAoCE,oBAAS,iBACT,KAAK,EAAL,CAAU,KAAK,aAAL,CAAmB,EAA7B,CACA,KAAK,KAAL,CAAa,KAAK,aAAL,CAAmB,KAAhC,CACA;AAEA;AACA;AACA;AACA,GAAI,CAAA,GAAG,CAAG,oFAAV,CACA,GAAI,CAAA,QAAQ,CAAG,GAAI,CAAA,0CAAA,CAAA,SAAA,CAAnB,CAEA,QAAQ,CAAC,MAAT,CAAgB,cAAhB,CAAgC,kBAAhC,EACA,QAAQ,CAAC,MAAT,CAAgB,6BAAhB,CAA+C,GAA/C,EACA,QAAQ,CAAC,MAAT,CAAgB,8BAAhB,CAAgD,yBAAhD,EACA,QAAQ,CAAC,MAAT,CAAgB,cAAhB,CAAgC,mCAAhC,EACA,QAAQ,CAAC,MAAT,CAAgB,eAAhB,CAAiC,UAAY,KAAK,KAAlD,EAEA;AACA;AACA;AACA;AAEA,GAAI,CAAA,SAAS,CAAG,KAAK,aAAL,CAAmB,YAAnB,EAAhB,CACA,GAAI,CAAA,QAAQ,CAAG,KAAK,aAAL,CAAmB,WAAnB,EAAf,CAEA,GAAI,CAAA,IAAI,CAAG,CACV,UAAU,CAAE,SADF,CAEV,OAAO,CAAE,KAAK,KAAL,CAAW,OAFV,CAGV,aAAa,CAAE,QAHL,CAAX,CAKA,OAAO,CAAC,GAAR,CAAY,SAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAvB,EACA,KAAK,IAAL,CAAU,IAAV,CAAe,GAAf,CAAoB,IAAI,CAAC,SAAL,CAAe,IAAf,CAApB,CAA0C,CAAE,OAAO,CAAE,QAAX,CAA1C,EAAiE,SAAjE,CAA2E,SAAA,IAAI,CAAG,CACjF,MAAI,CAAC,SAAL,CAAiB,IAAI,CAAC,IAAL,EAAjB,CACA,OAAO,CAAC,GAAR,CAAY,gBAAkB,IAAI,CAAC,SAAL,CAAe,MAAI,CAAC,SAApB,CAA9B,EACA;AACA;AACA,mCALiF,CAMjF;AACA;;;;;kBAPiF,CAajF;;;;gBAbiF,CAkBjF;;;;;;;;;;;;;;;;;;;;;;;;oBAyBA,CA3CD,EA6CA;AACA;AACA,CAlHF,SAoHO,kBApHP,CAoHO,6BAAkB,C,wUACjB,O,CAAyB,CAC7B,OAAO,CAAE,GADoB,CAE7B,eAAe,CAAE,KAAK,MAAL,CAAY,eAAZ,CAA4B,QAFhB,CAG7B,6DACA,YAAY,CAAE,KAAK,MAAL,CAAY,YAAZ,CAAyB,IAJV,CAK7B,SAAS,CAAE,KAAK,MAAL,CAAY,SAAZ,CAAsB,OALJ,CAM7B,WAAW,CAAE,IANgB,CAO7B,YAAY,CAAE,GAPe,CAQ7B,gBAAgB,CAAE,IARW,CAS5B,kBAAkB,CAAE,IATQ,CAU5B,SAAS,CAAE,IAViB,C,CAa/B,KAAK,WAAL,CAAiB,kBAAjB,GAAsC,IAAtC,CAA2C,SAAC,IAAD,CAAS,CAClD,OAAO,CAAC,GAAR,CAAY,kBAAkB,IAAI,CAAC,MAAL,CAAY,QAA1C,CAAoD,IAAI,CAAC,MAAL,CAAY,SAAhE,EACA,MAAI,CAAC,QAAL,CAAgB,IAAI,CAAC,MAAL,CAAY,SAA5B,CACA,MAAI,CAAC,OAAL,CAAe,IAAI,CAAC,MAAL,CAAY,QAC3B,CAJF,EAII,KAJJ,CAIU,SAAC,KAAD,CAAU,CACjB,OAAO,CAAC,GAAR,CAAY,wBAAZ,CAAsC,KAAtC,CACD,CANF,E,gBASe,MAAM,MAAK,MAAL,CAAY,UAAZ,CAAuB,OAAvB,CAAN,C,OAAT,M,eACE,K,2BAAkC,M,CAClC,C,CAAI,IAAI,E,CAGV,O,CAAU,KAAK,aAAL,CAAmB,UAAnB,E,CACR,G,CAAM,IAAI,CAAC,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,SAA3B,CAAqC,CAArC,C,CACZ,uCACM,I,2BAAiC,M,CACjC,Q,gBAA0B,O,KAAW,G,CAC1C;4DAEK,Q,CAAW,KAAK,OAAL,CAAa,GAAb,CAAiB,QAAjB,C,CACb,I,CAAO,QAAQ,CAAC,SAAT,CAAmB,KAAnB,CAA0B,UAA1B,C,CACX,QAAQ,CAAC,cAAT,GAA0B,SAA1B,CAAoC,SAAA,EAAE,CAAG,CAC1C,OAAO,CAAC,GAAR,CAAY,kBAAkB,EAA9B,CACE,CAFD,EAIA,OAAO,CAAC,GAAR,CAAY,mBAAZ,EACI,G,CAAM,UAAU,CAAC,OAAD,C,CACpB,IAAI,CAAC,eAAL,GAAuB,IAAvB,CAA6B,MAAA,CAAA,2CAAA,CAAA,UAAA,CAAA,CAAA,CAAS,iBAAM,CAAA,QAAQ,CAAC,cAAT,GAA0B,SAA1B,CAC1C,SAAA,GAAG,CAAG,CACL,MAAI,CAAC,KAAL,CAAa,CACZ,GAAG,CAAE,GADO,CAEZ,MAAM,CAAE,+BAA+B,MAAI,CAAC,IAAL,CAAU,WAAzC,CAAqD,2BAFjD,CAGZ,GAAG,CAAE,GAHO,CAIZ,OAAO,CAAE,GAJG,CAKZ,OAAO,CAAE,MAAI,CAAC,aAAL,CAAmB,SAAnB,EALG,CAMZ,OAAO,CAAE,MAAI,CAAC,OANF,CAOZ,QAAQ,CAAE,MAAI,CAAC,QAPH,CAAb,CASA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe,MAAI,CAAC,KAApB,CAAZ,EACA,MAAI,CAAC,SAAL,CAAe,UAAf,CAA0B,aAA1B,EAAyC,GAAzC,IAAgD,GAAhD,EAAuD,UAAvD,CAAkE,OAAlE,EAA2E,GAA3E,CAA+E,MAAI,CAAC,KAApF,CACA,CAbyC,CAAN,CAAT,CAA7B,EAcK,SAdL,G,6DAgBD,CA/KH,SAkLQ,mBAlLR,CAkLQ,8BAAmB,C,6UAClB,O,CAAyB,CAC9B,OAAO,CAAE,GADqB,CAE9B,eAAe,CAAE,KAAK,MAAL,CAAY,eAAZ,CAA4B,QAFf,CAG9B,UAAU,CAAE,KAAK,MAAL,CAAY,iBAAZ,CAA8B,YAHZ,CAI9B,YAAY,CAAE,KAAK,MAAL,CAAY,YAAZ,CAAyB,IAJT,CAK9B,SAAS,CAAE,KAAK,MAAL,CAAY,SAAZ,CAAsB,OALH,CAM9B,WAAW,CAAE,IANiB,CAO9B,YAAY,CAAE,GAPgB,CAQ9B,gBAAgB,CAAE,IARY,CAS7B,kBAAkB,CAAE,IATS,CAU7B,SAAS,CAAE,IAVkB,C,CAa7B,KAAK,WAAL,CAAiB,kBAAjB,GAAsC,IAAtC,CAA2C,SAAC,IAAD,CAAS,CACrD,OAAO,CAAC,GAAR,CAAY,kBAAkB,IAAI,CAAC,MAAL,CAAY,QAA1C,CAAoD,IAAI,CAAC,MAAL,CAAY,SAAhE,EACA,MAAI,CAAC,OAAL,CAAe,IAAI,CAAC,MAAL,CAAY,QAA3B,CACA,MAAI,CAAC,QAAL,CAAgB,IAAI,CAAC,MAAL,CAAY,SACzB,CAJF,EAII,KAJJ,CAIU,SAAC,KAAD,CAAU,CACpB,OAAO,CAAC,GAAR,CAAY,wBAAZ,CAAsC,KAAtC,CACE,CANF,E,iBASe,MAAM,MAAK,MAAL,CAAY,UAAZ,CAAuB,OAAvB,CAAN,C,OAAT,M,gBACD,K,2BAAkC,M,CAClC,C,CAAI,IAAI,E,CAGV,O,CAAU,KAAK,aAAL,CAAmB,UAAnB,E,CACR,G,CAAM,IAAI,CAAC,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,SAA3B,CAAqC,CAArC,C,CACZ,uCACM,I,2BAAiC,M,CACjC,Q,gBAA0B,O,KAAW,G,CAC1C;4DAEK,Q,CAAW,KAAK,OAAL,CAAa,GAAb,CAAiB,QAAjB,C,CACb,I,CAAO,QAAQ,CAAC,SAAT,CAAmB,KAAnB,CAA0B,UAA1B,C,CACX,QAAQ,CAAC,cAAT,GAA0B,SAA1B,CAAoC,SAAA,EAAE,CAAG,CACvC,OAAO,CAAC,GAAR,CAAY,kBAAkB,EAA9B,CACD,CAFD,EAIA,OAAO,CAAC,GAAR,CAAY,mBAAZ,EACI,G,CAAM,UAAU,CAAC,OAAD,C,CACpB,IAAI,CAAC,eAAL,GAAuB,IAAvB,CAA6B,MAAA,CAAA,2CAAA,CAAA,UAAA,CAAA,CAAA,CAAS,iBAAM,CAAA,QAAQ,CAAC,cAAT,GAA0B,SAA1B,CAC1C,SAAA,GAAG,CAAG,CACL,MAAI,CAAC,KAAL,CAAa,CACZ,GAAG,CAAE,GADO,CAEZ,MAAM,CAAC,+BAA+B,MAAI,CAAC,IAAL,CAAU,WAAzC,CAAqD,4BAFhD,CAGZ,GAAG,CAAE,GAHO,CAIZ,OAAO,CAAE,GAJG,CAKZ,OAAO,CAAE,MAAI,CAAC,OALF,CAMZ,QAAQ,CAAE,MAAI,CAAC,QANH,CAAb,CAQA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe,MAAI,CAAC,KAApB,CAAZ,EACA,MAAI,CAAC,SAAL,CAAe,UAAf,CAA0B,aAA1B,EAAyC,GAAzC,IAAgD,GAAhD,EAAuD,UAAvD,CAAkE,OAAlE,EAA2E,GAA3E,CAA+E,MAAI,CAAC,KAApF,CACA,CAZyC,CAAN,CAAT,CAA7B,EAaK,SAbL,G,+DAeC,CA5OL,SA+OC,IA/OD,CA+OC,cAAK,IAAL,CAAmB,QAAnB,CAAmC,CAClC,GAAI,CAAA,IAAI,CAAG,KAAK,KAAhB,CAGA,OAAQ,IAAR,EACC,IAAK,OAAL,CAAc,CACb,2DACA,KACA,CACD,IAAK,cAAL,CAAqB,CACpB,4DACA,KACA,CACD,IAAK,GAAL,CAAU,CACT,KAAK,OAAL,CAAa,eAAb,CAA6B,CAAC,iCAAD,CAAoC,QAApC,CAA7B,EACA;AACA,KACA,CAbF,CAeA,CAlQF,0BAAA,C,uDAsB8B,qDAAA,CAAA,QAAA,C,QAAqB,0CAAA,CAAA,MAAA,C,QAAqB,4CAAA,CAAA,gBAAA,C,QAAgC,4CAAA,CAAA,QAAA,C,QAA8B,oDAAA,CAAA,gBAAA,C,QAAmC,mDAAA,CAAA,kBAAA,C,QAAkC,4CAAA,CAAA,eAAA,C,QAAoC,0DAAA,CAAA,aAAA,C,QAA8B,kDAAA,CAAA,oBAAA,C,IAtBhQ,eAAe,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,CACT,QAAQ,CAAE,kBADD,CAET,QAAA,CAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA,CAAA,0CAAA,2FAAA,CAAA,EAAA,OAFS,C,iLAAA,CAAV,CAK2B,C,sEAsBE,qDAAA,CAAA,QAAA,C,CAAqB,0CAAA,CAAA,MAAA,C,CAAqB,4CAAA,CAAA,gBAAA,C,CAAgC,4CAAA,CAAA,QAAA,C,CAA8B,oDAAA,CAAA,gBAAA,C,CAAmC,mDAAA,CAAA,kBAAA,C,CAAkC,4CAAA,CAAA,eAAA,C,CAAoC,0DAAA,CAAA,aAAA,C,CAA8B,kDAAA,CAAA,oBAAA,C,EAtBjP,CAAA,CAAf,eAAe,CAAf,C","sourcesContent":["export * from './public_api';\n//# sourceMappingURL=index.js.map","import { Observable } from 'rxjs';\nexport function fromTask(task) {\n    return new Observable(subscriber => {\n        const progress = (snap) => subscriber.next(snap);\n        const error = e => subscriber.error(e);\n        const complete = () => subscriber.complete();\n        task.on('state_changed', progress, error, complete);\n        return () => task.cancel();\n    });\n}\n//# sourceMappingURL=fromTask.js.map","export * from './ref';\nexport * from './storage';\nexport * from './task';\nexport * from './observable/fromTask';\nexport * from './storage.module';\n//# sourceMappingURL=public_api.js.map","import { createUploadTask } from './task';\nimport { from } from 'rxjs';\nexport function createStorageRef(ref, scheduler) {\n    return {\n        getDownloadURL: () => scheduler.keepUnstableUntilFirst(scheduler.runOutsideAngular(from(scheduler.zone.runOutsideAngular(() => ref.getDownloadURL())))),\n        getMetadata: () => scheduler.keepUnstableUntilFirst(scheduler.runOutsideAngular(from(scheduler.zone.runOutsideAngular(() => ref.getMetadata())))),\n        delete: () => from(ref.delete()),\n        child: (path) => createStorageRef(ref.child(path), scheduler),\n        updateMetatdata: (meta) => from(ref.updateMetadata(meta)),\n        updateMetadata: (meta) => from(ref.updateMetadata(meta)),\n        put: (data, metadata) => {\n            const task = ref.put(data, metadata);\n            return createUploadTask(task);\n        },\n        putString: (data, format, metadata) => {\n            const task = ref.putString(data, format, metadata);\n            return createUploadTask(task);\n        }\n    };\n}\n//# sourceMappingURL=ref.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Injectable, Inject, Optional, InjectionToken, NgZone, PLATFORM_ID } from '@angular/core';\nimport { createStorageRef } from './ref';\nimport { FirebaseOptionsToken, FirebaseNameOrConfigToken, FirebaseZoneScheduler, _firebaseAppFactory } from '@angular/fire';\nexport const StorageBucket = new InjectionToken('angularfire2.storageBucket');\nlet AngularFireStorage = class AngularFireStorage {\n    constructor(options, nameOrConfig, storageBucket, platformId, zone) {\n        this.scheduler = new FirebaseZoneScheduler(zone, platformId);\n        this.storage = zone.runOutsideAngular(() => {\n            const app = _firebaseAppFactory(options, nameOrConfig);\n            return app.storage(storageBucket || undefined);\n        });\n    }\n    ref(path) {\n        return createStorageRef(this.storage.ref(path), this.scheduler);\n    }\n    upload(path, data, metadata) {\n        const storageRef = this.storage.ref(path);\n        const ref = createStorageRef(storageRef, this.scheduler);\n        return ref.put(data, metadata);\n    }\n};\nAngularFireStorage = __decorate([\n    Injectable(),\n    __param(0, Inject(FirebaseOptionsToken)),\n    __param(1, Optional()), __param(1, Inject(FirebaseNameOrConfigToken)),\n    __param(2, Optional()), __param(2, Inject(StorageBucket)),\n    __param(3, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [Object, Object, Object, Object,\n        NgZone])\n], AngularFireStorage);\nexport { AngularFireStorage };\n//# sourceMappingURL=storage.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { AngularFireStorage } from './storage';\nimport 'firebase/storage';\nlet AngularFireStorageModule = class AngularFireStorageModule {\n};\nAngularFireStorageModule = __decorate([\n    NgModule({\n        providers: [AngularFireStorage]\n    })\n], AngularFireStorageModule);\nexport { AngularFireStorageModule };\n//# sourceMappingURL=storage.module.js.map","import { fromTask } from './observable/fromTask';\nimport { map } from 'rxjs/operators';\nexport function createUploadTask(task) {\n    const inner$ = fromTask(task);\n    return {\n        task: task,\n        then: task.then.bind(task),\n        catch: task.catch.bind(task),\n        pause: task.pause.bind(task),\n        cancel: task.cancel.bind(task),\n        resume: task.resume.bind(task),\n        snapshotChanges: () => inner$,\n        percentageChanges: () => inner$.pipe(map(s => s.bytesTransferred / s.totalBytes * 100))\n    };\n}\n//# sourceMappingURL=task.js.map","import firebase from '@firebase/app';\nimport { __awaiter, __generator } from 'tslib';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 100;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar MIN_SAFE_INTEGER = -9007199254740991;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        default:\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        default:\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isInteger(p) {\r\n    return isNumber(p) && Number.isInteger(p);\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(headers)) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (isDef(body)) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var httpRegex = new RegExp(\"^https?://\" + hostRegex + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (isDef(size)) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        if (p.hasOwnProperty(key)) {\r\n            var val = p[key];\r\n            if (key === 'customMetadata') {\r\n                if (!isObject(val)) {\r\n                    throw 'Expected object for \\'customMetadata\\' mapping.';\r\n                }\r\n            }\r\n            else {\r\n                if (isNonNullObject(val)) {\r\n                    throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_RESULTS_KEY = 'maxResults';\r\nvar MAX_MAX_RESULTS = 1000;\r\nvar PAGE_TOKEN_KEY = 'pageToken';\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(authWrapper, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    var bucket = authWrapper.bucket();\r\n    if (bucket === null) {\r\n        throw noDefaultBucket();\r\n    }\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(authWrapper, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(authWrapper, resource);\r\n}\r\nfunction listOptionsValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected ListOptions object.';\r\n    }\r\n    for (var key in p) {\r\n        if (key === MAX_RESULTS_KEY) {\r\n            if (!isInteger(p[MAX_RESULTS_KEY]) ||\r\n                p[MAX_RESULTS_KEY] <= 0) {\r\n                throw 'Expected maxResults to be a positive number.';\r\n            }\r\n            if (p[MAX_RESULTS_KEY] > 1000) {\r\n                throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\r\n            }\r\n        }\r\n        else if (key === PAGE_TOKEN_KEY) {\r\n            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\r\n                throw 'Expected pageToken to be string.';\r\n            }\r\n        }\r\n        else {\r\n            throw 'Unknown option: ' + key;\r\n        }\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(authWrapper) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(authWrapper, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(error) ||\r\n            isDef(complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error || null;\r\n            this.complete = complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(validator, optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var chainedValidator;\r\n    if (validator) {\r\n        chainedValidator = and_(stringValidator, validator);\r\n    }\r\n    else {\r\n        chainedValidator = stringValidator;\r\n    }\r\n    return new ArgSpec(chainedValidator, optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(optional) {\r\n    return new ArgSpec(metadataValidator, optional);\r\n}\r\nfunction listOptionSpec(optional) {\r\n    return new ArgSpec(listOptionsValidator, optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(validator, optional) {\r\n    function isLooseObjectValidator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (validator !== undefined && validator !== null) {\r\n            validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(isLooseObjectValidator, optional);\r\n}\r\nfunction nullFunctionSpec(optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, optional);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            default: // Ignore\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        function typeValidator() {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        var i = this.observers_.indexOf(observer);\r\n        if (i !== -1) {\r\n            this.observers_.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = this.observers_.slice();\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value The string to upload.\r\n     * @param format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = Object.assign({}, metadata);\r\n        if (!isDef(metadataClone['contentType']) &&\r\n            isDef(data.contentType)) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        var _this = this;\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(_this.authWrapper, _this.location);\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @return A Promise that resolves with all the items and prefixes under\r\n     *      the current storage reference. `prefixes` contains references to\r\n     *      sub-directories and `items` contains references to objects in this\r\n     *      folder. `nextPageToken` is never returned.\r\n     */\r\n    Reference.prototype.listAll = function () {\r\n        validate('listAll', [], arguments);\r\n        var accumulator = {\r\n            prefixes: [],\r\n            items: []\r\n        };\r\n        return this.listAllHelper(accumulator).then(function () { return accumulator; });\r\n    };\r\n    Reference.prototype.listAllHelper = function (accumulator, pageToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var opt, nextPage;\r\n            var _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        opt = {\r\n                            // maxResults is 1000 by default.\r\n                            pageToken: pageToken\r\n                        };\r\n                        return [4 /*yield*/, this.list(opt)];\r\n                    case 1:\r\n                        nextPage = _c.sent();\r\n                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                        (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        _c.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure.\r\n     * Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options See ListOptions for details.\r\n     * @return A Promise that resolves with the items and prefixes.\r\n     *      `prefixes` contains references to sub-folders and `items`\r\n     *      contains references to objects in this folder. `nextPageToken`\r\n     *      can be used to get the rest of the results.\r\n     */\r\n    Reference.prototype.list = function (options) {\r\n        validate('list', [listOptionSpec(true)], arguments);\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var op = options || {};\r\n            var requestInfo = list(self.authWrapper, self.location, \r\n            /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        var _this = this;\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        var _this = this;\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        var _this = this;\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map = new Map();\r\n        this.id = MIN_SAFE_INTEGER;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     *\r\n     * @param request The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (request) {\r\n        var _this = this;\r\n        var id = this.id;\r\n        this.id++;\r\n        this.map.set(id, request);\r\n        request\r\n            .getPromise()\r\n            .then(function () { return _this.map.delete(id); }, function () { return _this.map.delete(id); });\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        this.map.forEach(function (v) {\r\n            v && v.cancel(true);\r\n        });\r\n        this.map.clear();\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\r\n        this.bucket_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n            }\r\n        }\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\r\n        // (b/28673818).\r\n        if (this.app_ !== null &&\r\n            isDef(this.app_.INTERNAL) &&\r\n            isDef(this.app_.INTERNAL.getToken)) {\r\n            return this.app_.INTERNAL.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function () { return null; });\r\n        }\r\n        else {\r\n            return Promise.resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, [null, success].concat(args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, [null, success].concat(args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (typeof path !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (typeof p !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return Promise.resolve();\r\n    };\r\n    return ServiceInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(app, unused, url) {\r\n    return new Service(app, new XhrIoPool(), url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, \r\n    // Allow multiple storage instances per app.\r\n    true);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/storage';\n//# sourceMappingURL=index.esm.js.map\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t\\t<ion-menu-button></ion-menu-button>\\n\\t\\t\\t  </ion-buttons>\\n    <ion-title style=\\\"width: 100%;\\n\\t\\theight: 100%;\\n\\t\\ttext-align: center;\\n\\t\\tpadding: unset\\\">\\n\\t\\t\\t<!-- <ion-icon style=\\\"font-size: 2.0em; margin-left:80%;\\\" ios=\\\"ios-attach\\\" md=\\\"md-add\\\" (click)=\\\"Open('photo')\\\"></ion-icon> -->\\n\\t\\t\\t<ion-icon style=\\\"font-size: 2.0em; margin-left:80%;\\\" ios=\\\"ios-attach\\\" md=\\\"md-add\\\" (click)=\\\"takePicturesCamera()\\\"></ion-icon>\\n\\t\\t</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n\\t\\t<ion-item *ngIf=\\\"registros == 0\\\">\\n\\t\\t\\t<div class=\\\"sec2\\\">\\n\\t\\t\\t\\t<p class=\\\"fontPrimaria\\\" style=\\\"padding:20px;margin: 0px;\\\">\\n\\t\\t\\t\\t\\tAun no hay fotos de Avance que mostrar\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t</div>\\n\\t\\t</ion-item>\\n\\n\\t\\t<ion-item style=\\\"padding: 20px;\\\" *ngFor=\\\"let item of todo | async\\\" >\\n\\t\\t\\t<!-- <div *ngIf=\\\"FBcode == item.identificador\\\"> -->\\n\\t\\t\\t\\t<ion-item >\\n\\t\\t\\t<ion-avatar item-start style=\\\"border-radius: 0;\\\" (click)=\\\"Open('D', item)\\\">\\n\\t\\t\\t\\t<img style=\\\"width: 200px; height: 150px; border: #FDC938 3px solid; border-radius: 0;\\\" [src]=\\\"item.url\\\">\\n\\t\\t\\t</ion-avatar>\\n\\t\\t\\t<ion-note item-end>\\n\\t\\t\\t\\t<!-- <h3 style=\\\"font-size: 20px; color: #404040;\\\"><b>Nombre:</b> {{ registro.photoName }}</h3>\\n\\t\\t\\t\\t<h3 style=\\\"font-size: 12px; color: #404040;\\\"><b>Descripción:</b> {{ registro.description }}</h3>\\n\\t\\t\\t\\t<h3 style=\\\"font-size: 12px; color: #404040;\\\"><b>Latitud:</b> {{ registro.geoLatitude }}</h3>\\n\\t\\t\\t\\t<h3 style=\\\"font-size: 12px; color: #404040;\\\"><b>Longitud:</b> {{ registro.geoLongitude }}</h3> -->\\n\\t\\t\\t\\t<h3 style=\\\"font-size: 12px; color: #404040;\\\"><b>¿Quién la subió?:</b> {{ item.nombre }}</h3>\\n\\t\\t\\t\\t<!-- <h3 style=\\\"font-size: 12px; color: #404040;\\\"><b>Fecha - Hora:</b> {{ registro.creationDate }}</h3> -->\\n\\t\\t\\t</ion-note>\\n\\t\\t\\t\\t</ion-item>\\n\\t\\t<!-- </div> -->\\n\\t\\t\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-grid>\\n    <ion-row>\\n    <ion-col size=\\\"12\\\">\\n      <ion-col size=\\\"6\\\">\\n      <ion-icon class=\\\"icon-action-buttons\\\" name=\\\"camera\\\" (click)=\\\"takePicturesCamera()\\\" style=\\\"font-size: 30px;\\\"></ion-icon>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n      <ion-icon class=\\\"icon-action-buttons\\\" name=\\\"images\\\" (click)=\\\"takePicturesGallery()\\\" style=\\\"font-size: 30px;\\\"></ion-icon>\\n      </ion-col>\\n    </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  </ion-footer>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AvanceTareaPage } from './avance-tarea.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AvanceTareaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AvanceTareaPage]\n})\nexport class AvanceTareaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F2YW5jZS10YXJlYS9hdmFuY2UtdGFyZWEucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Http, Headers } from '@angular/http';\nimport { AngularFirestore,AngularFirestoreDocument,AngularFirestoreCollection  } from 'angularfire2/firestore';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { finalize } from 'rxjs/operators';\nimport { Products } from '../../models/products';\nimport { Observable } from 'rxjs/Observable';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { SqliteProvider } from '../../services/sqlite/sqlite';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-avance-tarea',\n  templateUrl: './avance-tarea.page.html',\n  styleUrls: ['./avance-tarea.page.scss'],\n})\nexport class AvanceTareaPage implements OnInit {\n\n  item;\n\tevidencia;\n\tregistros: any[];\n\tip;\n\ttoken;\n\tip2 = \"http://198.50.116.250/service_network_API/public/index.php/api\";\n\ttask_id;\n\tAvaEvi: string;\n\tImage = [];\n\tbase64Image = [];\n\tFBcode;\n\tdatas;\n\tpublic Project;\n\tcollection: AngularFirestoreCollection<Products>;\n\ttodo: Observable<Products[]>;\n\tlatitud;\n  longitud;\n  items;\n\n\n  constructor(private camera: Camera, public http: Http, private route: ActivatedRoute, private router: Router, public sqliteService: SqliteProvider, private firestore: AngularFirestore, public navCtrl: NavController, private geolocation: Geolocation, private storage: AngularFireStorage,) { }\n\n  ngOnInit() {\n\n    this.items = this.route.snapshot.params;\n    /* this.item = this.items.data.item;\n\t\tthis.evidencia = this.items.data.evidencia;\n    this.FBcode = this.items.data.item; */\n    \n    let taskId = this.sqliteService.GetTareaId();\n\t\tthis.collection = this.firestore.collection(`fotosAvance/${taskId}/fotos`);\n\t\tthis.todo = this.collection.valueChanges();\n  }\n\n  LoadDatas() {\n\t\tthis.ip = this.sqliteService.ip;\n\t\tthis.token = this.sqliteService.token;\n\t\t//let url = \"\";\n\n\t\t//if (typeof this.evidencia !== \"undefined\")  {\n\t\t//url = this.ip + `/evidence_photo`;\n\t\t//url = this.ip + `/evidenceTask`;\n\t\tlet url = \"http://198.50.116.250/service_network_API/public/index.php/api/getPhotosByPojectId\";\n\t\tlet headers2 = new Headers();\n\n\t\theaders2.append('Content-Type', 'application/json');\n\t\theaders2.append('Access-Control-Allow-Origin', '*');\n\t\theaders2.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, PUT');\n\t\theaders2.append('Content-Type', 'application/x-www-form-urlencoded');\n\t\theaders2.append('Authorization', 'Bearer ' + this.token);\n\n\t\t// let data = {\n\t\t//   idEvidence: this.evidencia.evidence_id,\n\t\t//   idTask: this.item.id\n\t\t// };\n\n\t\tlet ProjectId = this.sqliteService.GerProjectId();\n\t\tlet tipoFoto = this.sqliteService.GerTipoFoto();\n\n\t\tlet data = {\n\t\t\tproject_id: ProjectId,\n\t\t\ttask_id: this.items.tareaId,\n\t\t\tphoto_type_id: tipoFoto\n\t\t};\n\t\tconsole.log(\"data: \" + JSON.stringify(data));\n\t\tthis.http.post(url, JSON.stringify(data), { headers: headers2 }).subscribe(data => {\n\t\t\tthis.registros = data.json();\n\t\t\tconsole.log(\"Registros_1: \" + JSON.stringify(this.registros));\n\t\t\t//this.registros = Array.of(this.registros);\n\t\t\t//console.log(\"Registros_2: \" + JSON.stringify(this.registros));\n\t\t\t/* var registross = data.json(); */\n\t\t\t//this.registros = Array.of(this.registross);\n\t\t\t/* resultado.foreach(element =>{\n\t\t\t   this.registros = element.url;\n\t\t\t   this.registros = element.creation_date;\n\t\t\t   console.log(\"url: \"+element.url);\n\t\t\t   console.log(\"creation_date: \"+element.creation_date);\n\t\t\t}); */\n\t\t\t/* this.registros = Object.keys(registross).map(function(key) {\n\t\t\t  return [registross[key]];\n\t\t\t});\n\t\t\tconsole.log(\"Registros: \"+this.registros);\n\t\t  }); */\n\t\t\t/*  } \n\t\t\t else{\n\t\t\t   console.log(\"Entra a Avance\");\n\t\t \n\t\t\t   //url = this.ip2 + `/foto/${this.item.tareaId}`;\n\t\t\t   url = this.ip2 + `/getPhotosByPojectId`;\n\t\t \n\t\t\t   let headers2 = new Headers();\n\t\t \n\t\t\t   let ProjectId = this.sqliteService.GerProjectId();\n\t\t\t   let tipoFoto = this.sqliteService.GerTipoFoto();\n\t\t \n\t\t\t   let data = {\n\t\t\t\t project_id: ProjectId,\n\t\t\t\t task_id: this.item.tareaId,\n\t\t\t\t photo_type_id: tipoFoto\n\t\t\t   };\n\t\t \n\t\t \n\t\t\t   headers2.append('Accept','application/json');\n\t\t\t   headers2.append('content-type','application/json');\n\t\t\t   headers2.append('Authorization','Bearer '+this.token);\n\t\t\t   this.http.post(url, JSON.stringify(data), {headers: headers2}).subscribe(data => {\n\t\t\t\t this.registros = data.json();\n\t\t\t   });*/\n\t\t});\n\n\t\t// console.log(this.item);\n\t\t// console.log(data.json());\n\t}\n\n\tasync takePicturesCamera(){\n\t\tconst options: CameraOptions = {\n\t\t  quality: 100,\n\t\t  destinationType: this.camera.DestinationType.DATA_URL,\n\t\t  /* sourceType: this.camera.PictureSourceType.PHOTOLIBRARY, */\n\t\t  encodingType: this.camera.EncodingType.JPEG,\n\t\t  mediaType: this.camera.MediaType.PICTURE,\n\t\t  targetWidth: 1024,\n\t\t  targetHeight: 768,\n\t\t  saveToPhotoAlbum: true,\n\t\t   correctOrientation: true,\n\t\t   allowEdit: true,\n\t\t}\n\t  \n\t\tthis.geolocation.getCurrentPosition().then((resp) => {\n\t\t  console.log(\"Coordenadas 1: \"+resp.coords.latitude, resp.coords.longitude);\n\t\t  this.longitud = resp.coords.longitude;\n\t\t  this.latitud = resp.coords.latitude;\n\t\t }).catch((error) => {\n\t\t   console.log('Error getting location', error);\n\t\t });\n\t\t \n\t  \n\t\tconst result = await this.camera.getPicture(options); \n\t\t  const image = `data:image/jpeg;base64,${result}`;\n\t\t  const a = Date();\n\t\t  \n\t  \n\t\t  let tareaid = this.sqliteService.GetTareaId();\n\t\t  const idd = Math.random().toString(36).substring(2);\n\t\t  /* const file = this.Image[0].image; */\n\t\t  const file = `data:image/jpeg;base64,${result}`;\n\t\t  const filePath = `fotosAvance/${tareaid}/${idd}`;\n\t\t\t  /* const ref = this.storage.ref(filePath);\n\t\t  const task = this.storage.upload(filePath, file); */\n\t\t  const pictures = this.storage.ref(filePath);\n\t\t  var task = pictures.putString(image, 'data_url');\n\t\t  pictures.getDownloadURL().subscribe(ur =>{\n\t\t\tconsole.log(\"nueva funcion: \"+ur);\n\t\t  } );\n\t\t  \n\t\t  console.log(\"a punto de entrar\");\n\t\t  var tar = parseFloat(tareaid);\n\t\t  task.snapshotChanges().pipe( finalize(() => pictures.getDownloadURL().subscribe(\n\t\t\t\t  url =>{\n\t\t\t\t\t  this.datas = {\n\t\t\t\t\t\t  key: idd,\n\t\t\t\t\t\t  nombre: \"Foto de avance de la tarea: \"+this.item.nombreTarea+\". Foto desde la cámara\" ,\n\t\t\t\t\t\t  url: url,\n\t\t\t\t\t\t  idTarea: tar,\n\t\t\t\t\t\t  usuario: this.sqliteService.GerUserId(),\n\t\t\t\t\t\t  latitud: this.latitud,\n\t\t\t\t\t\t  longitud: this.longitud\n\t\t\t\t\t  } \n\t\t\t\t\t  console.log(JSON.stringify(this.datas));\n\t\t\t\t\t  this.firestore.collection('fotosAvance').doc(`${tar}`).collection('fotos').add(this.datas);\n\t\t\t\t  }\n\t\t\t  ))).subscribe();\n\t  \n\t\t}\n\n\n\t\tasync takePicturesGallery(){\n\t\t\tconst options: CameraOptions = {\n\t\t\t\tquality: 100,\n\t\t\t\tdestinationType: this.camera.DestinationType.DATA_URL,\n\t\t\t\tsourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\n\t\t\t\tencodingType: this.camera.EncodingType.JPEG,\n\t\t\t\tmediaType: this.camera.MediaType.PICTURE,\n\t\t\t\ttargetWidth: 1024,\n\t\t\t\ttargetHeight: 768,\n\t\t\t\tsaveToPhotoAlbum: true,\n\t\t\t\t correctOrientation: true,\n\t\t\t\t allowEdit: true,\n\t\t\t  }\n\t\t\t\n\t\t\t  this.geolocation.getCurrentPosition().then((resp) => {\n\t\t\t\tconsole.log(\"Coordenadas 1: \"+resp.coords.latitude, resp.coords.longitude);\n\t\t\t\tthis.latitud = resp.coords.latitude,\n\t\t\t\tthis.longitud = resp.coords.longitude\n\t\t\t   }).catch((error) => {\n\t\t\t\t console.log('Error getting location', error);\n\t\t\t   });\n\t\t\t   \n\t\t\t\n\t\t\t  const result = await this.camera.getPicture(options); \n\t\t\t\tconst image = `data:image/jpeg;base64,${result}`;\n\t\t\t\tconst a = Date();\n\t\t\t\t\n\t\t\t\n\t\t\t\tlet tareaid = this.sqliteService.GetTareaId();\n\t\t\t\tconst idd = Math.random().toString(36).substring(2);\n\t\t\t\t/* const file = this.Image[0].image; */\n\t\t\t\tconst file = `data:image/jpeg;base64,${result}`;\n\t\t\t\tconst filePath = `fotosAvance/${tareaid}/${idd}`;\n\t\t\t\t\t/* const ref = this.storage.ref(filePath);\n\t\t\t\tconst task = this.storage.upload(filePath, file); */\n\t\t\t\tconst pictures = this.storage.ref(filePath);\n\t\t\t\tvar task = pictures.putString(image, 'data_url');\n\t\t\t\tpictures.getDownloadURL().subscribe(ur =>{\n\t\t\t\t  console.log(\"nueva funcion: \"+ur);\n\t\t\t\t} );\n\t\t\t\t\n\t\t\t\tconsole.log(\"a punto de entrar\");\n\t\t\t\tvar tar = parseFloat(tareaid);\n\t\t\t\ttask.snapshotChanges().pipe( finalize(() => pictures.getDownloadURL().subscribe(\n\t\t\t\t\t\turl =>{\n\t\t\t\t\t\t\tthis.datas = {\n\t\t\t\t\t\t\t\tkey: idd,\n\t\t\t\t\t\t\t\tnombre:\"Foto de avance de la tarea: \"+this.item.nombreTarea+\". Foto desde la galería\",\n\t\t\t\t\t\t\t\turl: url,\n\t\t\t\t\t\t\t\tidTarea: tar,\n\t\t\t\t\t\t\t\tlatitud: this.latitud,\n\t\t\t\t\t\t\t\tlongitud: this.longitud\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\tconsole.log(JSON.stringify(this.datas));\n\t\t\t\t\t\t\tthis.firestore.collection('fotosAvance').doc(`${tar}`).collection('fotos').add(this.datas);\n\t\t\t\t\t\t}\n\t\t\t\t\t))).subscribe();\n\t\t\t\n\t\t  }\n\n\n\tOpen(page: string, registro: string) {\n\t\tlet item = this.items;\n\t\t\n\n\t\tswitch (page) {\n\t\t\tcase \"photo\": {\n\t\t\t\t/* this.navCtrl.push(NuevoregistroPage, { item: item }); */\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"photoGallery\": {\n\t\t\t\t/* this.navCtrl.push(Nuevoregistro2Page, { item: item }); */\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"D\": {\n\t\t\t\tthis.navCtrl.navigateForward(['/menu/first/detalle-foto-avance', registro ]);\n\t\t\t\t//this.router.navigate(['/menu/first/detalle-foto-avance' ,registro]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n}\n"],"sourceRoot":"webpack:///"}