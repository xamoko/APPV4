{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-c02a05e9.js';\nimport './config-503c2549.js';\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nconst SplitPane = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    visibleChanged(visible) {\n        const detail = { visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    }\n    connectedCallback() {\n        this.styleChildren();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    updateState() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            const callback = (q) => {\n                this.visible = q.matches;\n            };\n            const mediaList = window.matchMedia(mediaQuery);\n            mediaList.addListener(callback);\n            this.rmL = () => mediaList.removeListener(callback);\n            this.visible = mediaList.matches;\n        }\n    }\n    isPane(element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n    styleChildren() {\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n    }; }\n    static get style() { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)))}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; }\n};\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\n\nexport { SplitPane as ion_split_pane };\n"],"sourceRoot":"webpack:///"}