{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-textarea-ios.entry.js"],"names":[],"mappings":";;6OAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,8BAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,cAAA,CAAA,UAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,oBAAA,GAAA,CAAA,8CAAA,CAAA,mBAAA,CAAA,yBAAA,sDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,gDAAA,CAAA,mBAAA,CAAA,2BAAA,wDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,+CAAA,CAAA,mBAAA,CAAA,0BAAA,uDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,iDAAA,CAAA,mBAAA,CAAA,4BAAA,yDAAA,CAAA,CAKA,GAAA,CAAA,QAAA,yBACA,kBAAA,OAAA,CAAA,gBACQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,CAAgB,OAAhB,EACR,KAAA,OAAA,cAAoC,WAAA,EAApC,CACA,KAAA,gBAAA,CAAA,KAAA,CACA,KAAA,QAAA,CAAA,KAAA,CACA;;WAGA,KAAA,cAAA,CAAA,MAAA,CACA;;WAGA,KAAA,SAAA,CAAA,KAAA,CACA;;WAGA,KAAA,WAAA,CAAA,KAAA,CACA;;WAGA,KAAA,QAAA,CAAA,CAAA,CACA;;WAGA,KAAA,QAAA,CAAA,KAAA,CACA;;WAGA,KAAA,IAAA,CAAA,KAAA,OAAA,CACA;;WAGA,KAAA,QAAA,CAAA,KAAA,CACA;;WAGA,KAAA,QAAA,CAAA,KAAA,CACA;;WAGA,KAAA,UAAA,CAAA,KAAA,CACA;;WAGA,KAAA,QAAA,CAAA,KAAA,CACA;;WAGA,KAAA,KAAA,CAAA,EAAA,CACA,KAAA,OAAA,CAAA,SAAA,EAAA,CAAA,CACA,GAAA,KAAA,CAAA,WAAA,CAAA,CACA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAAA,KACA,CACA,KAAA,CAAA,SAAA,GACA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CACA,CANA,CAOA,KAAA,OAAA,CAAA,UAAA,CACA,KAAA,CAAA,QAAA,CAAA,IAAA,CACA,KAAA,CAAA,WAAA,GACA,KAAA,CAAA,QAAA,CAAA,IAAA,EACA,CAJA,CAKA,KAAA,MAAA,CAAA,UAAA,CACA,KAAA,CAAA,QAAA,CAAA,KAAA,CACA,KAAA,CAAA,WAAA,GACA,KAAA,CAAA,OAAA,CAAA,IAAA,EACA,CAJA,CAKA,KAAA,SAAA,CAAA,UAAA,CACA,KAAA,CAAA,gBAAA,EACA,CAFA,CAGA,KAAA,SAAA,CAAyB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,WAAX,CAAW,CAAX,CAAzB,CACA,KAAA,QAAA,CAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,UAAX,CAAW,CAAX,CAAxB,CACA,KAAA,QAAA,CAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,UAAX,CAAW,CAAX,CAAxB,CACA,KAAA,OAAA,CAAuB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,SAAX,CAAW,CAAX,CAAvB,CACA,KAAA,QAAA,CAAwB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,CAAW,UAAX,CAAW,CAAX,CACxB,CA3EA,qCA4EA,eA5EA,CA4EA,0BAAA,CACA,KAAA,SAAA,CAAyB,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAa,KAAA,SAAb,CAAa,KAAA,QAAb,CACzB,CA9EA,QA+EA,eA/EA,CA+EA,0BAAA,CACA,KAAA,SAAA,EACA,CACA;;OAlFA,QAqFA,YArFA,CAqFA,uBAAA,CACA,GAAA,CAAA,WAAA,CAAA,KAAA,WAAA,CACA,GAAA,CAAA,KAAA,CAAA,KAAA,QAAA,EAAA,CACA,GAAA,WAAA,EAAA,WAAA,CAAA,KAAA,GAAA,KAAA,CAAA,CACA,WAAA,CAAA,KAAA,CAAA,KACA,CACA,KAAA,WAAA,GACA,KAAA,SAAA,GACA,KAAA,SAAA,CAAA,IAAA,CAAA,CAA6B,KAAA,CAAA,KAA7B,CAAA,CACA,CA9FA,QA+FA,iBA/FA,CA+FA,4BAAA,CACA,KAAA,SAAA,GACA,KAAA,eAAA,GACA,CACA,KAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,WAAA,CAAA,iBAAA,CAAA,CACA,MAAA,CAAA,KAAA,EADA,CAAA,CAAA,CAGA,CACA,CAvGA,QAwGA,oBAxGA,CAwGA,+BAAA,CACA,CACA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,CACA,MAAA,CAAA,KAAA,EADA,CAAA,CAAA,CAGA,CACA,CA9GA,QA+GA,gBA/GA,CA+GA,2BAAA,CACA,KAAA,WAAA,EACA,CACA;AAlHA,QAmHA,WAnHA,CAmHA,sBAAA,CACA,GAAA,CAAA,WAAA,CAAA,KAAA,WAAA,CACA,GAAA,WAAA,EAAA,KAAA,QAAA,CAAA,CACY,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAQ,UAAA,CACpB,WAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CACA,WAAA,CAAA,KAAA,CAAA,MAAA,CAAA,WAAA,CAAA,YAAA,CAAA,IACa,CAHD,CAIZ,CACA,CACA;;;OA5HA,QAgIA,QAhIA,8FAgIA,kIACA,GAAA,KAAA,WAAA,CAAA,CACA,KAAA,WAAA,CAAA,KAAA,EACA,CAHA,0DAhIA,gFAqIA;;OArIA,QAwIA,eAxIA,CAwIA,0BAAA,CACA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,KAAA,WAAA,CACA,CA1IA,QA2IA,SA3IA,CA2IA,oBAAA,CACA,KAAA,QAAA,CAAA,IAAA,CAAA,CACA,cAAA,IADA,CAEA,WAAA,IAFA,CAGA,QAAA,IAHA,CAIA,uBAAA,KAAA,QAJA,CAKA,kBAAA,KAAA,WAAA,EAAA,IALA,CAMA,YAAA,KAAA,QAAA,EANA,CAOA,YAAA,KAAA,QAPA,CAAA,CASA,CACA;;OAtJA,QAyJA,gBAzJA,CAyJA,2BAAA,CACA,GAAA,CAAA,KAAA,WAAA,CAAA,CACA,MACA,CACA;AACA,GAAA,KAAA,gBAAA,EAAA,KAAA,QAAA,EAAA,CAAA,CACA;AACA,KAAA,KAAA,CAAA,EACA,CACA;AACA,KAAA,gBAAA,CAAA,KACA,CApKA,QAqKA,WArKA,CAqKA,sBAAA,CACA;AACA,GAAA,KAAA,WAAA,EAAA,CAAA,KAAA,QAAA,EAAA,KAAA,QAAA,EAAA,CAAA,CACA,KAAA,gBAAA,CAAA,IACA,CACA,KAAA,SAAA,EACA,CA3KA,QA4KA,QA5KA,CA4KA,mBAAA,CACA,MAAA,MAAA,QAAA,KAAA,EACA,CA9KA,QA+KA,QA/KA,CA+KA,mBAAA,CACA,MAAA,MAAA,KAAA,EAAA,EACA,CAjLA,QAkLA,MAlLA,CAkLA,iBAAA,gCACA,GAAA,CAAA,IAAA,CAAqB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAArB,CACA,GAAA,CAAA,KAAA,CAAA,KAAA,QAAA,EAAA,CACA,GAAA,CAAA,OAAA,CAAA,KAAA,OAAA,CAAA,MAAA,CACA,GAAA,CAAA,KAAA,CAAsB,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAa,KAAA,EAAb,CAAtB,CACA,GAAA,KAAA,CAAA,CACA,KAAA,CAAA,EAAA,CAAA,OACA,CACA,MAAgB,CAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,CAAM,CAAG,gBAAA,KAAA,QAAA,CAAA,MAAA,CAAA,IAAH,CAAG,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAA0E,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAkB,KAAA,KAAlB,CAA1E,mCAA2G,IAA3G,EAA2G,IAA3G,iBAAH,CAAN,CAAwI,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,UAAD,CAAC,CAAc,KAAA,CAAA,iBAAd,CAAc,GAAA,CAAA,aAAA,EAAA,QAAA,CAAA,MAAA,CAAA,WAAA,CAAA,EAAA,CAAd,CAAc,cAAA,CAAA,KAAA,cAAd,CAAc,SAAA,CAAA,KAAA,SAAd,CAAc,QAAA,CAAA,KAAA,QAAd,CAAc,SAAA,CAAA,KAAA,SAAd,CAAc,SAAA,CAAA,KAAA,SAAd,CAAc,IAAA,CAAA,KAAA,IAAd,CAAc,WAAA,CAAA,KAAA,WAAA,EAAA,EAAd,CAAc,QAAA,CAAA,KAAA,QAAd,CAAc,QAAA,CAAA,KAAA,QAAd,CAAc,UAAA,CAAA,KAAA,UAAd,CAAc,IAAA,CAAA,KAAA,IAAd,CAAc,IAAA,CAAA,KAAA,IAAd,CAAc,IAAA,CAAA,KAAA,IAAd,CAAc,OAAA,CAAA,KAAA,OAAd,CAAc,MAAA,CAAA,KAAA,MAAd,CAAc,OAAA,CAAA,KAAA,OAAd,CAAc,SAAA,CAAA,KAAA,SAAd,CAAD,CAAif,KAAjf,CAAxI,CAChB,CA3LA,oDA4LA,CAAc,MAAQ,CAAA,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAiB,CA5LvC,sCA6LA,CAA2B,MAAA,CAC3B,WAAA,CAAA,iBAAA,CAD2B,CAE3B,WAAA,CAAA,iBAAA,CAF2B,CAG3B,QAAA,CAAA,cAAA,CAH2B,CAIrB,CAjMN,iCAkMA,CAAwB,MAAA,snHAAgoH,CAlMxpH,sBAAA,CAoMA,GAAA,CAAA,WAAA,CAAA,CAAA,C","sourcesContent":["import { r as registerInstance, c as createEvent, f as readTask, d as getIonMode, h, H as Host, e as getElement } from './core-c02a05e9.js';\nimport './config-503c2549.js';\nimport { c as createColorClasses } from './theme-353a032e.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-c90aaa66.js';\n\nconst Textarea = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${textareaIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            if (this.nativeInput) {\n                this.value = this.nativeInput.value;\n            }\n            this.emitStyle();\n            this.ionInput.emit(ev);\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChange();\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChange();\n            this.ionBlur.emit();\n        };\n        this.onKeyDown = () => {\n            this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        const nativeInput = this.nativeInput;\n        const value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value });\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    }\n    disconnectedCallback() {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    }\n    componentDidLoad() {\n        this.runAutoGrow();\n    }\n    // TODO: performance hit, this cause layout thrashing\n    runAutoGrow() {\n        const nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(() => {\n                nativeInput.style.height = 'inherit';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n            });\n        }\n    }\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    }\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    checkClearOnEdit() {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    }\n    focusChange() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    }\n    hasValue() {\n        return this.getValue() !== '';\n    }\n    getValue() {\n        return this.value || '';\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign({}, createColorClasses(this.color), { [mode]: true }) }, h(\"textarea\", { class: \"native-textarea\", ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-ios-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h, ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-textarea-ios-h, .item-label-floating .sc-ion-textarea-ios-h, .item-label-stacked.sc-ion-textarea-ios-h, .item-label-stacked .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\"; }\n};\nlet textareaIds = 0;\n\nexport { Textarea as ion_textarea };\n"],"sourceRoot":"webpack:///"}